// This file is auto-generated by @hey-api/openapi-ts

export type AddDraftQuoteOptionRequest = {
    option: DraftQuoteOptionDto;
};

export type ChangeQuoteStatusRequest = {
    newStatus?: (string) | null;
    reason?: (string) | null;
    notifyClient?: boolean;
};

export type ClientApprovalRequest = {
    approval?: (string) | null;
    comments?: (string) | null;
    selectedOptionId?: (number) | null;
};

export type CreateDraftQuoteRequest = {
    requestId: string;
    header?: DraftQuoteHeaderDto;
    wizardData?: DraftQuoteWizardDataDto;
};

export type DraftQuoteAuditDto = {
    createdBy?: (string) | null;
    createdAt?: Date;
    lastUpdatedBy?: (string) | null;
    lastUpdatedAt?: Date;
    stepProgress?: DraftQuoteStepProgressDto;
};

export type DraftQuoteCargoDto = {
    items?: Array<DraftQuoteCargoItemDto> | null;
    hazmat?: boolean;
    goodsDescription?: (string) | null;
};

export type DraftQuoteCargoItemDto = {
    containerType?: (string) | null;
    quantity?: number;
    grossWeightKg?: number;
    volumeM3?: number;
};

export type DraftQuoteClientDto = {
    company?: (string) | null;
    contact?: (string) | null;
    email?: (string) | null;
    phone?: (string) | null;
};

export type DraftQuoteCommercialTermsDto = {
    currency?: (string) | null;
    incoterm?: (string) | null;
    validityDays?: number;
    cgvAccepted?: boolean;
};

export type DraftQuoteFreeTimeDto = {
    origin?: DraftQuoteFreeTimePeriodDto;
    destination?: DraftQuoteFreeTimePeriodDto;
};

export type DraftQuoteFreeTimePeriodDto = {
    days?: number;
};

export type DraftQuoteGeneralRequestInfoDto = {
    channel?: (string) | null;
    priority?: (string) | null;
    notes?: (string) | null;
};

export type DraftQuoteHaulageDto = {
    id?: (string) | null;
    provider?: (string) | null;
    scope?: (string) | null;
    from?: (string) | null;
    to?: (string) | null;
    currency?: (string) | null;
    pricing?: Array<DraftQuoteHaulagePricingDto> | null;
    notes?: (string) | null;
};

export type DraftQuoteHaulagePricingDto = {
    containerType?: (string) | null;
    unit?: (string) | null;
    price?: number;
    includedWaitingHours?: number;
    extraHourPrice?: number;
};

export type DraftQuoteHeaderDto = {
    client?: DraftQuoteClientDto;
    shipment?: DraftQuoteShipmentDto;
    commercialTerms?: DraftQuoteCommercialTermsDto;
};

export type DraftQuoteLocationDto = {
    city?: (string) | null;
    country?: (string) | null;
};

export type DraftQuoteMilestonesDto = {
    pickup?: (Date) | null;
    vgm?: (Date) | null;
    si?: (Date) | null;
    cutoff?: (Date) | null;
};

export type DraftQuoteOptionContainerDto = {
    containerType?: (string) | null;
    quantity?: number;
};

export type DraftQuoteOptionDto = {
    optionId?: (string) | null;
    label?: (string) | null;
    containers?: Array<DraftQuoteOptionContainerDto> | null;
    seafreightRef?: (string) | null;
    haulageRefs?: Array<(string)> | null;
    serviceRefs?: Array<(string)> | null;
    suppliers?: DraftQuoteOptionSuppliersDto;
    servicesOffered?: Array<DraftQuoteServiceOfferedDto> | null;
    schedule?: DraftQuoteScheduleDto;
    milestones?: DraftQuoteMilestonesDto;
    pricingPreview?: DraftQuotePricingPreviewDto;
};

export type DraftQuoteOptionServiceProviderDto = {
    serviceId?: (string) | null;
    provider?: (string) | null;
};

export type DraftQuoteOptionSuppliersDto = {
    carrier?: (string) | null;
    haulage?: Array<(string)> | null;
    services?: Array<DraftQuoteOptionServiceProviderDto> | null;
};

export type DraftQuotePricingLineDto = {
    kind?: (string) | null;
    description?: (string) | null;
    unitPrice?: number;
    qty?: number;
    taxable?: boolean;
    taxRate?: (number) | null;
};

export type DraftQuotePricingPreviewDto = {
    currency?: (string) | null;
    lines?: Array<DraftQuotePricingLineDto> | null;
    subtotals?: DraftQuotePricingSubtotalsDto;
    taxTotal?: number;
    grandTotal?: number;
};

export type DraftQuotePricingSubtotalsDto = {
    taxableBase?: number;
    nontaxableBase?: number;
};

export type DraftQuoteRateDto = {
    containerType?: (string) | null;
    basePrice?: number;
};

export type DraftQuoteResponse = {
    draftQuoteId?: (string) | null;
    requestId?: (string) | null;
    status?: (string) | null;
    version?: number;
    resumeToken?: (string) | null;
    header?: DraftQuoteHeaderDto;
    wizardData?: DraftQuoteWizardDataDto;
    options?: Array<DraftQuoteOptionDto> | null;
    validation?: DraftQuoteValidationDto;
    audit?: DraftQuoteAuditDto;
    totalOptions?: number;
    bestPrice?: (number) | null;
    currency?: (string) | null;
};

export type DraftQuoteResponseCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: DraftQuoteResponse;
    errors?: Array<(string)> | null;
    meta?: unknown;
};

export type DraftQuoteResponseListCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: Array<DraftQuoteResponse> | null;
    errors?: Array<(string)> | null;
    meta?: unknown;
};

export type DraftQuoteRoutingAndCargoDto = {
    portOfLoading?: (string) | null;
    portOfDestination?: (string) | null;
    cargo?: DraftQuoteCargoDto;
};

export type DraftQuoteScheduleDto = {
    etd?: Date;
    eta?: Date;
};

export type DraftQuoteSeafreightDto = {
    id?: (string) | null;
    carrier?: (string) | null;
    service?: (string) | null;
    etd?: Date;
    eta?: Date;
    currency?: (string) | null;
    validUntil?: Date;
    rates?: Array<DraftQuoteRateDto> | null;
    surcharges?: Array<DraftQuoteSurchargeDto> | null;
    freeTime?: DraftQuoteFreeTimeDto;
};

export type DraftQuoteServiceDto = {
    id?: (string) | null;
    name?: (string) | null;
    provider?: (string) | null;
    unit?: (string) | null;
    price?: number;
    currency?: (string) | null;
    taxable?: boolean;
    taxRate?: (number) | null;
};

export type DraftQuoteServiceOfferedDto = {
    type?: (string) | null;
    details?: (string) | null;
};

export type DraftQuoteShipmentDto = {
    fromRequest?: boolean;
    readonly?: Array<(string)> | null;
    cargoType?: (string) | null;
    goodsDescription?: (string) | null;
    origin?: DraftQuoteLocationDto;
    destination?: DraftQuoteLocationDto;
    requestedDeparture?: (Date) | null;
};

export type DraftQuoteStepProgressDto = {
    generalRequestInformation?: (string) | null;
    routingAndCargo?: (string) | null;
    seafreights?: (string) | null;
    haulages?: (string) | null;
    services?: (string) | null;
    options?: (string) | null;
};

export type DraftQuoteSurchargeDto = {
    code?: (string) | null;
    label?: (string) | null;
    calc?: (string) | null;
    base?: (string) | null;
    unit?: (string) | null;
    value?: number;
    currency?: (string) | null;
    taxable?: boolean;
    appliesTo?: Array<(string)> | null;
};

export type DraftQuoteValidationCheckDto = {
    rule?: (string) | null;
    ok?: boolean;
    message?: (string) | null;
};

export type DraftQuoteValidationDto = {
    checks?: Array<DraftQuoteValidationCheckDto> | null;
    warnings?: Array<DraftQuoteValidationWarningDto> | null;
};

export type DraftQuoteValidationDtoCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: DraftQuoteValidationDto;
    errors?: Array<(string)> | null;
    meta?: unknown;
};

export type DraftQuoteValidationWarningDto = {
    code?: (string) | null;
    message?: (string) | null;
};

export type DraftQuoteWizardDataDto = {
    generalRequestInformation?: DraftQuoteGeneralRequestInfoDto;
    routingAndCargo?: DraftQuoteRoutingAndCargoDto;
    seafreights?: Array<DraftQuoteSeafreightDto> | null;
    haulages?: Array<DraftQuoteHaulageDto> | null;
    services?: Array<DraftQuoteServiceDto> | null;
};

export type FinalizeDraftRequest = {
    options?: Array<QuoteOptionRequest> | null;
    preferredOptionId?: number;
    quoteComments?: (string) | null;
    expirationDate?: (Date) | null;
    sendToClient?: boolean;
};

export type HaulageOptionRequest = {
    provider?: (string) | null;
    route?: (string) | null;
    pricing?: QuoteOptionPricingRequest;
};

export type MiscellaneousOptionRequest = {
    serviceName?: (string) | null;
    provider?: (string) | null;
    pricing?: QuoteOptionPricingRequest;
};

export type ObjectCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: unknown;
    errors?: Array<(string)> | null;
    meta?: unknown;
};

export type PricingBreakdownRequest = {
    category?: (string) | null;
    description?: (string) | null;
    amount?: number;
};

export type QuoteOfferSearchDto = {
    clientNumber?: (string) | null;
    emailUser?: (string) | null;
    status?: (string) | null;
    createdFrom?: (Date) | null;
    createdTo?: (Date) | null;
    quoteOfferNumber?: (number) | null;
    requestQuoteId?: (string) | null;
    searchTerm?: (string) | null;
    page?: number;
    pageSize?: number;
    sortBy?: (string) | null;
    sortOrder?: (string) | null;
    sortDirection?: (string) | null;
};

export type QuoteOptionDetailsDto = {
    haulageProvider?: (string) | null;
    seaFreightCarrier?: (string) | null;
    route?: (string) | null;
    etd?: (Date) | null;
    eta?: (Date) | null;
    servicesIncluded?: Array<(string)> | null;
};

export type QuoteOptionPricingRequest = {
    totalAmount?: number;
    currency?: (string) | null;
    breakdown?: Array<PricingBreakdownRequest> | null;
};

export type QuoteOptionRequest = {
    optionId?: number;
    description?: (string) | null;
    pricing?: QuoteOptionPricingRequest;
    haulage?: HaulageOptionRequest;
    seaFreight?: SeaFreightOptionRequest;
    miscellaneous?: Array<MiscellaneousOptionRequest> | null;
};

export type QuoteOptionResponse = {
    optionId?: number;
    description?: (string) | null;
    isPreferred?: boolean;
    totals?: QuoteOptionTotalsDto;
    details?: QuoteOptionDetailsDto;
};

export type QuoteOptionTotalsDto = {
    haulageTotal?: number;
    seaFreightTotal?: number;
    miscellaneousTotal?: number;
    grandTotal?: number;
    currency?: (string) | null;
};

export type QuoteResponse = {
    id?: (string) | null;
    quoteNumber?: number;
    requestQuoteId?: (string) | null;
    clientNumber?: (string) | null;
    emailUser?: (string) | null;
    comments?: (string) | null;
    status?: (string) | null;
    clientApproval?: (string) | null;
    options?: Array<QuoteOptionResponse> | null;
    preferredOptionId?: number;
    summary?: QuoteSummaryDto;
    expirationDate?: Date;
    createdDate?: Date;
    lastModified?: Date;
    files?: Array<(string)> | null;
};

export type QuoteResponseCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: QuoteResponse;
    errors?: Array<(string)> | null;
    meta?: unknown;
};

export type QuoteResponseListCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: Array<QuoteResponse> | null;
    errors?: Array<(string)> | null;
    meta?: unknown;
};

export type QuoteSearchRequest = {
    clientNumber?: (string) | null;
    emailUser?: (string) | null;
    status?: (string) | null;
    createdFrom?: (Date) | null;
    createdTo?: (Date) | null;
    expirationFrom?: (Date) | null;
    expirationTo?: (Date) | null;
    minAmount?: (number) | null;
    maxAmount?: (number) | null;
    query?: (string) | null;
    pageNumber?: number;
    pageSize?: number;
};

export type QuoteSummaryDto = {
    route?: (string) | null;
    totalOptions?: number;
    bestPrice?: number;
    highestPrice?: number;
    currency?: (string) | null;
    preferredOptionDescription?: (string) | null;
};

export type SeaFreightOptionRequest = {
    carrier?: (string) | null;
    service?: (string) | null;
    etd?: Date;
    eta?: Date;
    pricing?: QuoteOptionPricingRequest;
};

export type UpdateDraftQuoteRequest = {
    header?: DraftQuoteHeaderDto;
    wizardData?: DraftQuoteWizardDataDto;
    options?: Array<DraftQuoteOptionDto> | null;
    notes?: (string) | null;
};

export type PostApiQuotesSearchData = {
    body?: QuoteSearchRequest;
};

export type PostApiQuotesSearchResponse = (QuoteResponseListCommonApiResponse);

export type PostApiQuotesSearchError = unknown;

export type GetApiQuotesByIdData = {
    path: {
        id: string;
    };
};

export type GetApiQuotesByIdResponse = (QuoteResponseCommonApiResponse);

export type GetApiQuotesByIdError = (QuoteResponseCommonApiResponse);

export type DeleteApiQuotesByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiQuotesByIdResponse = (ObjectCommonApiResponse);

export type DeleteApiQuotesByIdError = unknown;

export type PostApiQuotesFinalizeByDraftIdData = {
    body?: FinalizeDraftRequest;
    path: {
        draftId: string;
    };
};

export type PostApiQuotesFinalizeByDraftIdResponse = (QuoteResponseCommonApiResponse);

export type PostApiQuotesFinalizeByDraftIdError = (QuoteResponseCommonApiResponse);

export type PutApiQuotesByIdStatusData = {
    body?: ChangeQuoteStatusRequest;
    path: {
        id: string;
    };
};

export type PutApiQuotesByIdStatusResponse = (QuoteResponseCommonApiResponse);

export type PutApiQuotesByIdStatusError = unknown;

export type PostApiQuotesByIdClientApprovalData = {
    body?: ClientApprovalRequest;
    path: {
        id: string;
    };
};

export type PostApiQuotesByIdClientApprovalResponse = (QuoteResponseCommonApiResponse);

export type PostApiQuotesByIdClientApprovalError = unknown;

export type PostApiDraftQuotesData = {
    body?: CreateDraftQuoteRequest;
};

export type PostApiDraftQuotesResponse = (DraftQuoteResponseCommonApiResponse);

export type PostApiDraftQuotesError = (ObjectCommonApiResponse);

export type GetApiDraftQuotesByIdData = {
    path: {
        id: string;
    };
};

export type GetApiDraftQuotesByIdResponse = (DraftQuoteResponseCommonApiResponse);

export type GetApiDraftQuotesByIdError = (ObjectCommonApiResponse);

export type PutApiDraftQuotesByIdData = {
    body?: UpdateDraftQuoteRequest;
    path: {
        id: string;
    };
};

export type PutApiDraftQuotesByIdResponse = (DraftQuoteResponseCommonApiResponse);

export type PutApiDraftQuotesByIdError = (ObjectCommonApiResponse);

export type DeleteApiDraftQuotesByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiDraftQuotesByIdResponse = (ObjectCommonApiResponse);

export type DeleteApiDraftQuotesByIdError = (ObjectCommonApiResponse);

export type PostApiDraftQuotesByIdOptionsData = {
    body?: AddDraftQuoteOptionRequest;
    path: {
        id: string;
    };
};

export type PostApiDraftQuotesByIdOptionsResponse = (DraftQuoteResponseCommonApiResponse);

export type PostApiDraftQuotesByIdOptionsError = (ObjectCommonApiResponse);

export type PostApiDraftQuotesByIdValidateData = {
    path: {
        id: string;
    };
};

export type PostApiDraftQuotesByIdValidateResponse = (DraftQuoteValidationDtoCommonApiResponse);

export type PostApiDraftQuotesByIdValidateError = (ObjectCommonApiResponse);

export type PostApiDraftQuotesSearchData = {
    body?: QuoteOfferSearchDto;
};

export type PostApiDraftQuotesSearchResponse = (DraftQuoteResponseListCommonApiResponse);

export type PostApiDraftQuotesSearchError = unknown;

export type PostApiQuotesSearchResponseTransformer = (data: any) => Promise<PostApiQuotesSearchResponse>;

export type QuoteResponseListCommonApiResponseModelResponseTransformer = (data: any) => QuoteResponseListCommonApiResponse;

export type QuoteResponseModelResponseTransformer = (data: any) => QuoteResponse;

export type QuoteOptionResponseModelResponseTransformer = (data: any) => QuoteOptionResponse;

export type QuoteOptionDetailsDtoModelResponseTransformer = (data: any) => QuoteOptionDetailsDto;

export const QuoteOptionDetailsDtoModelResponseTransformer: QuoteOptionDetailsDtoModelResponseTransformer = data => {
    if (data?.etd) {
        data.etd = new Date(data.etd);
    }
    if (data?.eta) {
        data.eta = new Date(data.eta);
    }
    return data;
};

export const QuoteOptionResponseModelResponseTransformer: QuoteOptionResponseModelResponseTransformer = data => {
    if (data?.details) {
        QuoteOptionDetailsDtoModelResponseTransformer(data.details);
    }
    return data;
};

export const QuoteResponseModelResponseTransformer: QuoteResponseModelResponseTransformer = data => {
    if (Array.isArray(data?.options)) {
        data.options.forEach(QuoteOptionResponseModelResponseTransformer);
    }
    if (data?.expirationDate) {
        data.expirationDate = new Date(data.expirationDate);
    }
    if (data?.createdDate) {
        data.createdDate = new Date(data.createdDate);
    }
    if (data?.lastModified) {
        data.lastModified = new Date(data.lastModified);
    }
    return data;
};

export const QuoteResponseListCommonApiResponseModelResponseTransformer: QuoteResponseListCommonApiResponseModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(QuoteResponseModelResponseTransformer);
    }
    return data;
};

export const PostApiQuotesSearchResponseTransformer: PostApiQuotesSearchResponseTransformer = async (data) => {
    QuoteResponseListCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type GetApiQuotesByIdResponseTransformer = (data: any) => Promise<GetApiQuotesByIdResponse>;

export type QuoteResponseCommonApiResponseModelResponseTransformer = (data: any) => QuoteResponseCommonApiResponse;

export const QuoteResponseCommonApiResponseModelResponseTransformer: QuoteResponseCommonApiResponseModelResponseTransformer = data => {
    if (data?.data) {
        QuoteResponseModelResponseTransformer(data.data);
    }
    return data;
};

export const GetApiQuotesByIdResponseTransformer: GetApiQuotesByIdResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiQuotesFinalizeByDraftIdResponseTransformer = (data: any) => Promise<PostApiQuotesFinalizeByDraftIdResponse>;

export const PostApiQuotesFinalizeByDraftIdResponseTransformer: PostApiQuotesFinalizeByDraftIdResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PutApiQuotesByIdStatusResponseTransformer = (data: any) => Promise<PutApiQuotesByIdStatusResponse>;

export const PutApiQuotesByIdStatusResponseTransformer: PutApiQuotesByIdStatusResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiQuotesByIdClientApprovalResponseTransformer = (data: any) => Promise<PostApiQuotesByIdClientApprovalResponse>;

export const PostApiQuotesByIdClientApprovalResponseTransformer: PostApiQuotesByIdClientApprovalResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiDraftQuotesResponseTransformer = (data: any) => Promise<PostApiDraftQuotesResponse>;

export type DraftQuoteResponseCommonApiResponseModelResponseTransformer = (data: any) => DraftQuoteResponseCommonApiResponse;

export type DraftQuoteResponseModelResponseTransformer = (data: any) => DraftQuoteResponse;

export type DraftQuoteHeaderDtoModelResponseTransformer = (data: any) => DraftQuoteHeaderDto;

export type DraftQuoteShipmentDtoModelResponseTransformer = (data: any) => DraftQuoteShipmentDto;

export const DraftQuoteShipmentDtoModelResponseTransformer: DraftQuoteShipmentDtoModelResponseTransformer = data => {
    if (data?.requestedDeparture) {
        data.requestedDeparture = new Date(data.requestedDeparture);
    }
    return data;
};

export const DraftQuoteHeaderDtoModelResponseTransformer: DraftQuoteHeaderDtoModelResponseTransformer = data => {
    if (data?.shipment) {
        DraftQuoteShipmentDtoModelResponseTransformer(data.shipment);
    }
    return data;
};

export type DraftQuoteWizardDataDtoModelResponseTransformer = (data: any) => DraftQuoteWizardDataDto;

export type DraftQuoteSeafreightDtoModelResponseTransformer = (data: any) => DraftQuoteSeafreightDto;

export const DraftQuoteSeafreightDtoModelResponseTransformer: DraftQuoteSeafreightDtoModelResponseTransformer = data => {
    if (data?.etd) {
        data.etd = new Date(data.etd);
    }
    if (data?.eta) {
        data.eta = new Date(data.eta);
    }
    if (data?.validUntil) {
        data.validUntil = new Date(data.validUntil);
    }
    return data;
};

export const DraftQuoteWizardDataDtoModelResponseTransformer: DraftQuoteWizardDataDtoModelResponseTransformer = data => {
    if (Array.isArray(data?.seafreights)) {
        data.seafreights.forEach(DraftQuoteSeafreightDtoModelResponseTransformer);
    }
    return data;
};

export type DraftQuoteOptionDtoModelResponseTransformer = (data: any) => DraftQuoteOptionDto;

export type DraftQuoteScheduleDtoModelResponseTransformer = (data: any) => DraftQuoteScheduleDto;

export const DraftQuoteScheduleDtoModelResponseTransformer: DraftQuoteScheduleDtoModelResponseTransformer = data => {
    if (data?.etd) {
        data.etd = new Date(data.etd);
    }
    if (data?.eta) {
        data.eta = new Date(data.eta);
    }
    return data;
};

export type DraftQuoteMilestonesDtoModelResponseTransformer = (data: any) => DraftQuoteMilestonesDto;

export const DraftQuoteMilestonesDtoModelResponseTransformer: DraftQuoteMilestonesDtoModelResponseTransformer = data => {
    if (data?.pickup) {
        data.pickup = new Date(data.pickup);
    }
    if (data?.vgm) {
        data.vgm = new Date(data.vgm);
    }
    if (data?.si) {
        data.si = new Date(data.si);
    }
    if (data?.cutoff) {
        data.cutoff = new Date(data.cutoff);
    }
    return data;
};

export const DraftQuoteOptionDtoModelResponseTransformer: DraftQuoteOptionDtoModelResponseTransformer = data => {
    if (data?.schedule) {
        DraftQuoteScheduleDtoModelResponseTransformer(data.schedule);
    }
    if (data?.milestones) {
        DraftQuoteMilestonesDtoModelResponseTransformer(data.milestones);
    }
    return data;
};

export type DraftQuoteAuditDtoModelResponseTransformer = (data: any) => DraftQuoteAuditDto;

export const DraftQuoteAuditDtoModelResponseTransformer: DraftQuoteAuditDtoModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.lastUpdatedAt) {
        data.lastUpdatedAt = new Date(data.lastUpdatedAt);
    }
    return data;
};

export const DraftQuoteResponseModelResponseTransformer: DraftQuoteResponseModelResponseTransformer = data => {
    if (data?.header) {
        DraftQuoteHeaderDtoModelResponseTransformer(data.header);
    }
    if (data?.wizardData) {
        DraftQuoteWizardDataDtoModelResponseTransformer(data.wizardData);
    }
    if (Array.isArray(data?.options)) {
        data.options.forEach(DraftQuoteOptionDtoModelResponseTransformer);
    }
    if (data?.audit) {
        DraftQuoteAuditDtoModelResponseTransformer(data.audit);
    }
    return data;
};

export const DraftQuoteResponseCommonApiResponseModelResponseTransformer: DraftQuoteResponseCommonApiResponseModelResponseTransformer = data => {
    if (data?.data) {
        DraftQuoteResponseModelResponseTransformer(data.data);
    }
    return data;
};

export const PostApiDraftQuotesResponseTransformer: PostApiDraftQuotesResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type GetApiDraftQuotesByIdResponseTransformer = (data: any) => Promise<GetApiDraftQuotesByIdResponse>;

export const GetApiDraftQuotesByIdResponseTransformer: GetApiDraftQuotesByIdResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PutApiDraftQuotesByIdResponseTransformer = (data: any) => Promise<PutApiDraftQuotesByIdResponse>;

export const PutApiDraftQuotesByIdResponseTransformer: PutApiDraftQuotesByIdResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiDraftQuotesByIdOptionsResponseTransformer = (data: any) => Promise<PostApiDraftQuotesByIdOptionsResponse>;

export const PostApiDraftQuotesByIdOptionsResponseTransformer: PostApiDraftQuotesByIdOptionsResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiDraftQuotesSearchResponseTransformer = (data: any) => Promise<PostApiDraftQuotesSearchResponse>;

export type DraftQuoteResponseListCommonApiResponseModelResponseTransformer = (data: any) => DraftQuoteResponseListCommonApiResponse;

export const DraftQuoteResponseListCommonApiResponseModelResponseTransformer: DraftQuoteResponseListCommonApiResponseModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(DraftQuoteResponseModelResponseTransformer);
    }
    return data;
};

export const PostApiDraftQuotesSearchResponseTransformer: PostApiDraftQuotesSearchResponseTransformer = async (data) => {
    DraftQuoteResponseListCommonApiResponseModelResponseTransformer(data);
    return data;
};