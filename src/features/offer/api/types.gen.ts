// This file is auto-generated by @hey-api/openapi-ts

export type AddDraftQuoteOptionRequest = {
    option: DraftQuoteOptionDto;
};

export type CreateDraftQuoteRequest = {
    requestQuoteId: string;
    customer?: DraftQuoteCustomerDto;
    shipment?: DraftQuoteShipmentDto;
    wizard?: DraftQuoteWizardDto;
};

export type CreateQuoteRequest = {
    draftQuoteId?: (string) | null;
    selectedOptionId?: (string) | null;
    validityDays?: number;
    paymentTerms?: (string) | null;
    notes?: (string) | null;
};

export type DraftQuoteAddressDto = {
    line1?: (string) | null;
    line2?: (string) | null;
    city?: (string) | null;
    zip?: (string) | null;
    country?: (string) | null;
};

export type DraftQuoteAttachmentDto = {
    id?: (string) | null;
    name?: (string) | null;
    mime?: (string) | null;
};

export type DraftQuoteCommercialTermsDto = {
    depositPolicy?: DraftQuoteDepositPolicyDto;
    generalConditionsId?: (string) | null;
};

export type DraftQuoteConstraintsDto = {
    minTruckLeadDays?: number;
    terminalCutoffDays?: number;
    customsDeadlineHours?: number;
};

export type DraftQuoteContactPersonDto = {
    fullName?: (string) | null;
    phone?: (string) | null;
    email?: (string) | null;
};

export type DraftQuoteContainerTotalsDto = {
    qty?: number;
    unitPrice?: number;
    subtotal?: number;
};

export type DraftQuoteCustomerDto = {
    type?: (string) | null;
    name?: (string) | null;
    vat?: (string) | null;
    emails?: Array<(string)> | null;
    phones?: Array<(string)> | null;
    address?: DraftQuoteAddressDto;
    contactPerson?: DraftQuoteContactPersonDto;
};

export type DraftQuoteDepositPolicyDto = {
    type?: (string) | null;
    value?: number;
};

export type DraftQuoteDocsDto = {
    requiresVGM?: boolean;
    requiresBLDraftApproval?: boolean;
};

export type DraftQuoteHaulageDto = {
    id?: (string) | null;
    phase?: (string) | null;
    mode?: (string) | null;
    from?: (string) | null;
    to?: (string) | null;
    pricingScope?: (string) | null;
    containerFilter?: Array<(string)> | null;
    windows?: DraftQuoteWindowsDto;
    basePrice?: number;
    surcharges?: Array<DraftQuoteSurchargeDto> | null;
};

export type DraftQuoteLocationDto = {
    location?: (string) | null;
    country?: (string) | null;
};

export type DraftQuoteOptionContainerDto = {
    containerType?: (string) | null;
    quantity?: number;
};

export type DraftQuoteOptionDto = {
    optionId?: (string) | null;
    label?: (string) | null;
    validUntil?: (string) | null;
    currency?: (string) | null;
    containers?: Array<DraftQuoteOptionContainerDto> | null;
    planning?: DraftQuotePlanningDto;
    seafreight?: DraftQuoteOptionSeafreightDto;
    haulages?: Array<DraftQuoteOptionHaulageDto> | null;
    services?: Array<DraftQuoteOptionServiceDto> | null;
    totals?: DraftQuoteOptionTotalsDto;
    terms?: DraftQuoteOptionTermsDto;
};

export type DraftQuoteOptionHaulageDto = {
    id?: (string) | null;
    phase?: (string) | null;
    mode?: (string) | null;
    from?: (string) | null;
    to?: (string) | null;
    pricingScope?: (string) | null;
    containerFilter?: Array<(string)> | null;
    windows?: DraftQuoteWindowsDto;
    basePrice?: number;
    surcharges?: Array<DraftQuoteSurchargeDto> | null;
};

export type DraftQuoteOptionSeafreightDto = {
    id?: (string) | null;
    carrier?: (string) | null;
    service?: (string) | null;
    rate?: Array<DraftQuoteRateDto> | null;
    surcharges?: Array<DraftQuoteSurchargeDto> | null;
};

export type DraftQuoteOptionServiceDto = {
    code?: (string) | null;
    label?: (string) | null;
    calc?: (string) | null;
    unit?: (string) | null;
    value?: number;
    currency?: (string) | null;
    taxable?: boolean;
};

export type DraftQuoteOptionTermsDto = {
    depositPolicy?: DraftQuoteDepositPolicyDto;
    generalConditionsId?: (string) | null;
};

export type DraftQuoteOptionTotalsDto = {
    perContainer?: {
        [key: string]: (number);
    } | null;
    byContainerType?: {
        [key: string]: DraftQuoteContainerTotalsDto;
    } | null;
    seafreightBaseTotal?: number;
    haulageTotal?: number;
    servicesTotal?: number;
    surchargesTotal?: number;
    grandTotal?: number;
};

export type DraftQuotePlanningDto = {
    emptyPickupDate?: (string) | null;
    vgmDate?: (string) | null;
    siDate?: (string) | null;
    customsDate?: (string) | null;
    fullGateInDate?: (string) | null;
    etd?: (string) | null;
    eta?: (string) | null;
};

export type DraftQuotePortDto = {
    portId?: number;
    portName?: (string) | null;
    unlocode?: (string) | null;
    country?: (string) | null;
    city?: (string) | null;
};

export type DraftQuoteRateDto = {
    containerType?: (string) | null;
    basePrice?: number;
};

export type DraftQuoteResponse = {
    draftQuoteId?: (string) | null;
    requestQuoteId?: (string) | null;
    resumeToken?: (string) | null;
    createdAt?: Date;
    updatedAt?: Date;
    status?: (string) | null;
    currency?: (string) | null;
    incoterm?: (string) | null;
    customer?: DraftQuoteCustomerDto;
    shipment?: DraftQuoteShipmentDto;
    attachments?: Array<DraftQuoteAttachmentDto> | null;
    commercialTerms?: DraftQuoteCommercialTermsDto;
    wizard?: DraftQuoteWizardDto;
    options?: Array<DraftQuoteOptionDto> | null;
};

export type DraftQuoteResponseCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: DraftQuoteResponse;
    meta?: unknown;
    errors?: Array<(string)> | null;
};

export type DraftQuoteResponseListCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: Array<DraftQuoteResponse> | null;
    meta?: unknown;
    errors?: Array<(string)> | null;
};

export type DraftQuoteSeafreightDto = {
    id?: (string) | null;
    carrier?: (string) | null;
    service?: (string) | null;
    rate?: Array<DraftQuoteRateDto> | null;
    surcharges?: Array<DraftQuoteSurchargeDto> | null;
};

export type DraftQuoteServiceDto = {
    code?: (string) | null;
    label?: (string) | null;
    calc?: (string) | null;
    unit?: (string) | null;
    value?: number;
    currency?: (string) | null;
    taxable?: boolean;
};

export type DraftQuoteShipmentDto = {
    mode?: (string) | null;
    containerCount?: number;
    containerTypes?: Array<(string)> | null;
    commodity?: (string) | null;
    hsCodes?: Array<(string)> | null;
    origin?: DraftQuoteLocationDto;
    destination?: DraftQuoteLocationDto;
    portFrom?: DraftQuotePortDto;
    portTo?: DraftQuotePortDto;
    requestedDeparture?: (Date) | null;
    docs?: DraftQuoteDocsDto;
    constraints?: DraftQuoteConstraintsDto;
};

export type DraftQuoteSurchargeDto = {
    code?: (string) | null;
    label?: (string) | null;
    calc?: (string) | null;
    base?: (string) | null;
    unit?: (string) | null;
    value?: number;
    currency?: (string) | null;
    taxable?: boolean;
    appliesTo?: Array<(string)> | null;
};

export type DraftQuoteWindowsDto = {
    load?: (string) | null;
    returnDeadline?: (string) | null;
};

export type DraftQuoteWizardDto = {
    notes?: (string) | null;
    selectedServiceLevel?: (string) | null;
    seafreights?: Array<DraftQuoteSeafreightDto> | null;
    haulages?: Array<DraftQuoteHaulageDto> | null;
    services?: Array<DraftQuoteServiceDto> | null;
};

export type ObjectCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: unknown;
    meta?: unknown;
    errors?: Array<(string)> | null;
};

export type QuoteAddressDto = {
    line1?: (string) | null;
    line2?: (string) | null;
    city?: (string) | null;
    zip?: (string) | null;
    country?: (string) | null;
};

export type QuoteApprovalRequest = {
    action?: (string) | null;
    comments?: (string) | null;
    clientName?: (string) | null;
    clientEmail?: (string) | null;
};

export type QuoteAttachmentDto = {
    id?: (string) | null;
    name?: (string) | null;
    mime?: (string) | null;
    url?: (string) | null;
};

export type QuoteAvailableOptionDto = {
    optionId?: (string) | null;
    label?: (string) | null;
    validUntil?: (Date) | null;
    currency?: (string) | null;
    containers?: Array<QuoteContainerDto> | null;
    planning?: QuotePlanningDto;
    totals?: QuoteTotalsDto;
};

export type QuoteClientApprovalDto = {
    status?: (string) | null;
    requestedAt?: (Date) | null;
    deadline?: (Date) | null;
    approvalUrl?: (string) | null;
    rejectionUrl?: (string) | null;
};

export type QuoteCommercialTermsDto = {
    depositPolicy?: QuoteDepositPolicyDto;
    generalConditionsId?: (string) | null;
    paymentTerms?: (string) | null;
    validityPeriod?: (string) | null;
};

export type QuoteConstraintsDto = {
    minTruckLeadDays?: number;
    terminalCutoffDays?: number;
    customsDeadlineHours?: number;
};

export type QuoteContactPersonDto = {
    fullName?: (string) | null;
    phone?: (string) | null;
    email?: (string) | null;
};

export type QuoteContainerDto = {
    containerType?: (string) | null;
    quantity?: number;
};

export type QuoteContainerTotalsDto = {
    qty?: number;
    unitPrice?: number;
    subtotal?: number;
};

export type QuoteCustomerDto = {
    type?: (string) | null;
    name?: (string) | null;
    vat?: (string) | null;
    emails?: Array<(string)> | null;
    phones?: Array<(string)> | null;
    address?: QuoteAddressDto;
    contactPerson?: QuoteContactPersonDto;
};

export type QuoteDepositPolicyDto = {
    type?: (string) | null;
    value?: number;
};

export type QuoteDocsDto = {
    requiresVGM?: boolean;
    requiresBLDraftApproval?: boolean;
};

export type QuoteHaulageDto = {
    id?: (string) | null;
    phase?: (string) | null;
    mode?: (string) | null;
    from?: (string) | null;
    to?: (string) | null;
    pricingScope?: (string) | null;
    containerFilter?: Array<(string)> | null;
    windows?: QuoteWindowsDto;
    basePrice?: number;
    surcharges?: Array<QuoteSurchargeDto> | null;
};

export type QuoteLocationDto = {
    location?: (string) | null;
    country?: (string) | null;
};

export type QuoteMetadataDto = {
    createdBy?: (string) | null;
    sentBy?: (string) | null;
    version?: (string) | null;
    template?: (string) | null;
    language?: (string) | null;
    notes?: (string) | null;
};

export type QuotePlanningDto = {
    emptyPickupDate?: (Date) | null;
    vgmDate?: (Date) | null;
    siDate?: (Date) | null;
    customsDate?: (Date) | null;
    fullGateInDate?: (Date) | null;
    etd?: (Date) | null;
    eta?: (Date) | null;
};

export type QuoteRateDto = {
    containerType?: (string) | null;
    basePrice?: number;
};

export type QuoteResponse = {
    quoteId?: (string) | null;
    draftQuoteId?: (string) | null;
    requestQuoteId?: (string) | null;
    quoteNumber?: (string) | null;
    status?: (string) | null;
    createdAt?: Date;
    updatedAt?: Date;
    sentAt?: (Date) | null;
    expiresAt?: (Date) | null;
    currency?: (string) | null;
    incoterm?: (string) | null;
    validityDays?: number;
    customer?: QuoteCustomerDto;
    shipment?: QuoteShipmentDto;
    attachments?: Array<QuoteAttachmentDto> | null;
    commercialTerms?: QuoteCommercialTermsDto;
    selectedOption?: QuoteSelectedOptionDto;
    availableOptions?: Array<QuoteAvailableOptionDto> | null;
    clientApproval?: QuoteClientApprovalDto;
    metadata?: QuoteMetadataDto;
};

export type QuoteResponseCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: QuoteResponse;
    meta?: unknown;
    errors?: Array<(string)> | null;
};

export type QuoteResponsePagedResult = {
    items?: Array<QuoteResponse> | null;
    totalCount?: number;
    pageNumber?: number;
    pageSize?: number;
    readonly totalPages?: number;
};

export type QuoteResponsePagedResultCommonApiResponse = {
    code?: number;
    message?: (string) | null;
    data?: QuoteResponsePagedResult;
    meta?: unknown;
    errors?: Array<(string)> | null;
};

export type QuoteSeafreightDto = {
    id?: (string) | null;
    carrier?: (string) | null;
    service?: (string) | null;
    rate?: Array<QuoteRateDto> | null;
    surcharges?: Array<QuoteSurchargeDto> | null;
};

export type QuoteSelectedOptionDto = {
    optionId?: (string) | null;
    label?: (string) | null;
    validUntil?: (Date) | null;
    currency?: (string) | null;
    containers?: Array<QuoteContainerDto> | null;
    planning?: QuotePlanningDto;
    seafreight?: QuoteSeafreightDto;
    haulages?: Array<QuoteHaulageDto> | null;
    services?: Array<QuoteServiceDto> | null;
    totals?: QuoteTotalsDto;
    terms?: QuoteTermsDto;
};

export type QuoteServiceDto = {
    code?: (string) | null;
    label?: (string) | null;
    calc?: (string) | null;
    unit?: (string) | null;
    value?: number;
    currency?: (string) | null;
    taxable?: boolean;
};

export type QuoteShipmentDto = {
    mode?: (string) | null;
    containerCount?: number;
    containerTypes?: Array<(string)> | null;
    commodity?: (string) | null;
    hsCodes?: Array<(string)> | null;
    origin?: QuoteLocationDto;
    destination?: QuoteLocationDto;
    requestedDeparture?: (Date) | null;
    docs?: QuoteDocsDto;
    constraints?: QuoteConstraintsDto;
};

export type QuoteSurchargeDto = {
    code?: (string) | null;
    label?: (string) | null;
    calc?: (string) | null;
    base?: (string) | null;
    unit?: (string) | null;
    value?: number;
    currency?: (string) | null;
    taxable?: boolean;
    appliesTo?: Array<(string)> | null;
};

export type QuoteTermsDto = {
    depositPolicy?: QuoteDepositPolicyDto;
    generalConditionsId?: (string) | null;
};

export type QuoteTotalsDto = {
    perContainer?: {
        [key: string]: (number);
    } | null;
    byContainerType?: {
        [key: string]: QuoteContainerTotalsDto;
    } | null;
    seafreightBaseTotal?: number;
    haulageTotal?: number;
    servicesTotal?: number;
    surchargesTotal?: number;
    grandTotal?: number;
};

export type QuoteWindowsDto = {
    load?: (Date) | null;
    returnDeadline?: (Date) | null;
};

export type UpdateDraftQuoteRequest = {
    customer?: DraftQuoteCustomerDto;
    shipment?: DraftQuoteShipmentDto;
    wizard?: DraftQuoteWizardDto;
    options?: Array<DraftQuoteOptionDto> | null;
    notes?: (string) | null;
};

export type UpdateQuoteRequest = {
    status?: (string) | null;
    expiresAt?: (Date) | null;
    clientApproval?: (string) | null;
    notes?: (string) | null;
};

export type PostApiQuotesData = {
    body?: CreateQuoteRequest;
};

export type PostApiQuotesResponse = (QuoteResponseCommonApiResponse);

export type PostApiQuotesError = (ObjectCommonApiResponse);

export type GetApiQuotesData = {
    query?: {
        customerName?: string;
        dateFrom?: Date;
        dateTo?: Date;
        pageNumber?: number;
        pageSize?: number;
        status?: string;
    };
};

export type GetApiQuotesResponse = (QuoteResponsePagedResultCommonApiResponse);

export type GetApiQuotesError = unknown;

export type GetApiQuotesByIdData = {
    path: {
        id: string;
    };
};

export type GetApiQuotesByIdResponse = (QuoteResponseCommonApiResponse);

export type GetApiQuotesByIdError = (ObjectCommonApiResponse);

export type PutApiQuotesByIdData = {
    body?: UpdateQuoteRequest;
    path: {
        id: string;
    };
};

export type PutApiQuotesByIdResponse = (QuoteResponseCommonApiResponse);

export type PutApiQuotesByIdError = (ObjectCommonApiResponse);

export type DeleteApiQuotesByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiQuotesByIdResponse = (ObjectCommonApiResponse);

export type DeleteApiQuotesByIdError = (ObjectCommonApiResponse);

export type PostApiQuotesByIdApprovalData = {
    body?: QuoteApprovalRequest;
    path: {
        id: string;
    };
};

export type PostApiQuotesByIdApprovalResponse = (QuoteResponseCommonApiResponse);

export type PostApiQuotesByIdApprovalError = (ObjectCommonApiResponse);

export type PostApiDraftQuotesData = {
    body?: CreateDraftQuoteRequest;
};

export type PostApiDraftQuotesResponse = (DraftQuoteResponseCommonApiResponse);

export type PostApiDraftQuotesError = (ObjectCommonApiResponse);

export type GetApiDraftQuotesData = {
    query?: {
        customerName?: string;
        page?: number;
        pageSize?: number;
        status?: string;
    };
};

export type GetApiDraftQuotesResponse = (DraftQuoteResponseListCommonApiResponse);

export type GetApiDraftQuotesError = unknown;

export type GetApiDraftQuotesByIdData = {
    path: {
        id: string;
    };
};

export type GetApiDraftQuotesByIdResponse = (DraftQuoteResponseCommonApiResponse);

export type GetApiDraftQuotesByIdError = (ObjectCommonApiResponse);

export type PutApiDraftQuotesByIdData = {
    body?: UpdateDraftQuoteRequest;
    path: {
        id: string;
    };
};

export type PutApiDraftQuotesByIdResponse = (DraftQuoteResponseCommonApiResponse);

export type PutApiDraftQuotesByIdError = (ObjectCommonApiResponse);

export type DeleteApiDraftQuotesByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiDraftQuotesByIdResponse = (ObjectCommonApiResponse);

export type DeleteApiDraftQuotesByIdError = (ObjectCommonApiResponse);

export type PostApiDraftQuotesByIdOptionsData = {
    body?: AddDraftQuoteOptionRequest;
    path: {
        id: string;
    };
};

export type PostApiDraftQuotesByIdOptionsResponse = (DraftQuoteResponseCommonApiResponse);

export type PostApiDraftQuotesByIdOptionsError = (ObjectCommonApiResponse);

export type DeleteApiDraftQuotesByIdOptionsByOptionIdData = {
    path: {
        id: string;
        optionId: string;
    };
};

export type DeleteApiDraftQuotesByIdOptionsByOptionIdResponse = (DraftQuoteResponseCommonApiResponse);

export type DeleteApiDraftQuotesByIdOptionsByOptionIdError = (ObjectCommonApiResponse);

export type PostApiDraftQuotesByIdFinalizeData = {
    path: {
        id: string;
    };
};

export type PostApiDraftQuotesByIdFinalizeResponse = (DraftQuoteResponseCommonApiResponse);

export type PostApiDraftQuotesByIdFinalizeError = (ObjectCommonApiResponse);

export type PostApiQuotesResponseTransformer = (data: any) => Promise<PostApiQuotesResponse>;

export type QuoteResponseCommonApiResponseModelResponseTransformer = (data: any) => QuoteResponseCommonApiResponse;

export type QuoteResponseModelResponseTransformer = (data: any) => QuoteResponse;

export type QuoteShipmentDtoModelResponseTransformer = (data: any) => QuoteShipmentDto;

export const QuoteShipmentDtoModelResponseTransformer: QuoteShipmentDtoModelResponseTransformer = data => {
    if (data?.requestedDeparture) {
        data.requestedDeparture = new Date(data.requestedDeparture);
    }
    return data;
};

export type QuoteSelectedOptionDtoModelResponseTransformer = (data: any) => QuoteSelectedOptionDto;

export type QuotePlanningDtoModelResponseTransformer = (data: any) => QuotePlanningDto;

export const QuotePlanningDtoModelResponseTransformer: QuotePlanningDtoModelResponseTransformer = data => {
    if (data?.emptyPickupDate) {
        data.emptyPickupDate = new Date(data.emptyPickupDate);
    }
    if (data?.vgmDate) {
        data.vgmDate = new Date(data.vgmDate);
    }
    if (data?.siDate) {
        data.siDate = new Date(data.siDate);
    }
    if (data?.customsDate) {
        data.customsDate = new Date(data.customsDate);
    }
    if (data?.fullGateInDate) {
        data.fullGateInDate = new Date(data.fullGateInDate);
    }
    if (data?.etd) {
        data.etd = new Date(data.etd);
    }
    if (data?.eta) {
        data.eta = new Date(data.eta);
    }
    return data;
};

export type QuoteHaulageDtoModelResponseTransformer = (data: any) => QuoteHaulageDto;

export type QuoteWindowsDtoModelResponseTransformer = (data: any) => QuoteWindowsDto;

export const QuoteWindowsDtoModelResponseTransformer: QuoteWindowsDtoModelResponseTransformer = data => {
    if (data?.load) {
        data.load = new Date(data.load);
    }
    if (data?.returnDeadline) {
        data.returnDeadline = new Date(data.returnDeadline);
    }
    return data;
};

export const QuoteHaulageDtoModelResponseTransformer: QuoteHaulageDtoModelResponseTransformer = data => {
    if (data?.windows) {
        QuoteWindowsDtoModelResponseTransformer(data.windows);
    }
    return data;
};

export const QuoteSelectedOptionDtoModelResponseTransformer: QuoteSelectedOptionDtoModelResponseTransformer = data => {
    if (data?.validUntil) {
        data.validUntil = new Date(data.validUntil);
    }
    if (data?.planning) {
        QuotePlanningDtoModelResponseTransformer(data.planning);
    }
    if (Array.isArray(data?.haulages)) {
        data.haulages.forEach(QuoteHaulageDtoModelResponseTransformer);
    }
    return data;
};

export type QuoteAvailableOptionDtoModelResponseTransformer = (data: any) => QuoteAvailableOptionDto;

export const QuoteAvailableOptionDtoModelResponseTransformer: QuoteAvailableOptionDtoModelResponseTransformer = data => {
    if (data?.validUntil) {
        data.validUntil = new Date(data.validUntil);
    }
    if (data?.planning) {
        QuotePlanningDtoModelResponseTransformer(data.planning);
    }
    return data;
};

export type QuoteClientApprovalDtoModelResponseTransformer = (data: any) => QuoteClientApprovalDto;

export const QuoteClientApprovalDtoModelResponseTransformer: QuoteClientApprovalDtoModelResponseTransformer = data => {
    if (data?.requestedAt) {
        data.requestedAt = new Date(data.requestedAt);
    }
    if (data?.deadline) {
        data.deadline = new Date(data.deadline);
    }
    return data;
};

export const QuoteResponseModelResponseTransformer: QuoteResponseModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.sentAt) {
        data.sentAt = new Date(data.sentAt);
    }
    if (data?.expiresAt) {
        data.expiresAt = new Date(data.expiresAt);
    }
    if (data?.shipment) {
        QuoteShipmentDtoModelResponseTransformer(data.shipment);
    }
    if (data?.selectedOption) {
        QuoteSelectedOptionDtoModelResponseTransformer(data.selectedOption);
    }
    if (Array.isArray(data?.availableOptions)) {
        data.availableOptions.forEach(QuoteAvailableOptionDtoModelResponseTransformer);
    }
    if (data?.clientApproval) {
        QuoteClientApprovalDtoModelResponseTransformer(data.clientApproval);
    }
    return data;
};

export const QuoteResponseCommonApiResponseModelResponseTransformer: QuoteResponseCommonApiResponseModelResponseTransformer = data => {
    if (data?.data) {
        QuoteResponseModelResponseTransformer(data.data);
    }
    return data;
};

export const PostApiQuotesResponseTransformer: PostApiQuotesResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type GetApiQuotesResponseTransformer = (data: any) => Promise<GetApiQuotesResponse>;

export type QuoteResponsePagedResultCommonApiResponseModelResponseTransformer = (data: any) => QuoteResponsePagedResultCommonApiResponse;

export type QuoteResponsePagedResultModelResponseTransformer = (data: any) => QuoteResponsePagedResult;

export const QuoteResponsePagedResultModelResponseTransformer: QuoteResponsePagedResultModelResponseTransformer = data => {
    if (Array.isArray(data?.items)) {
        data.items.forEach(QuoteResponseModelResponseTransformer);
    }
    return data;
};

export const QuoteResponsePagedResultCommonApiResponseModelResponseTransformer: QuoteResponsePagedResultCommonApiResponseModelResponseTransformer = data => {
    if (data?.data) {
        QuoteResponsePagedResultModelResponseTransformer(data.data);
    }
    return data;
};

export const GetApiQuotesResponseTransformer: GetApiQuotesResponseTransformer = async (data) => {
    QuoteResponsePagedResultCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type GetApiQuotesByIdResponseTransformer = (data: any) => Promise<GetApiQuotesByIdResponse>;

export const GetApiQuotesByIdResponseTransformer: GetApiQuotesByIdResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PutApiQuotesByIdResponseTransformer = (data: any) => Promise<PutApiQuotesByIdResponse>;

export const PutApiQuotesByIdResponseTransformer: PutApiQuotesByIdResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiQuotesByIdApprovalResponseTransformer = (data: any) => Promise<PostApiQuotesByIdApprovalResponse>;

export const PostApiQuotesByIdApprovalResponseTransformer: PostApiQuotesByIdApprovalResponseTransformer = async (data) => {
    QuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiDraftQuotesResponseTransformer = (data: any) => Promise<PostApiDraftQuotesResponse>;

export type DraftQuoteResponseCommonApiResponseModelResponseTransformer = (data: any) => DraftQuoteResponseCommonApiResponse;

export type DraftQuoteResponseModelResponseTransformer = (data: any) => DraftQuoteResponse;

export type DraftQuoteShipmentDtoModelResponseTransformer = (data: any) => DraftQuoteShipmentDto;

export const DraftQuoteShipmentDtoModelResponseTransformer: DraftQuoteShipmentDtoModelResponseTransformer = data => {
    if (data?.requestedDeparture) {
        data.requestedDeparture = new Date(data.requestedDeparture);
    }
    return data;
};

export const DraftQuoteResponseModelResponseTransformer: DraftQuoteResponseModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    if (data?.shipment) {
        DraftQuoteShipmentDtoModelResponseTransformer(data.shipment);
    }
    return data;
};

export const DraftQuoteResponseCommonApiResponseModelResponseTransformer: DraftQuoteResponseCommonApiResponseModelResponseTransformer = data => {
    if (data?.data) {
        DraftQuoteResponseModelResponseTransformer(data.data);
    }
    return data;
};

export const PostApiDraftQuotesResponseTransformer: PostApiDraftQuotesResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type GetApiDraftQuotesResponseTransformer = (data: any) => Promise<GetApiDraftQuotesResponse>;

export type DraftQuoteResponseListCommonApiResponseModelResponseTransformer = (data: any) => DraftQuoteResponseListCommonApiResponse;

export const DraftQuoteResponseListCommonApiResponseModelResponseTransformer: DraftQuoteResponseListCommonApiResponseModelResponseTransformer = data => {
    if (Array.isArray(data?.data)) {
        data.data.forEach(DraftQuoteResponseModelResponseTransformer);
    }
    return data;
};

export const GetApiDraftQuotesResponseTransformer: GetApiDraftQuotesResponseTransformer = async (data) => {
    DraftQuoteResponseListCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type GetApiDraftQuotesByIdResponseTransformer = (data: any) => Promise<GetApiDraftQuotesByIdResponse>;

export const GetApiDraftQuotesByIdResponseTransformer: GetApiDraftQuotesByIdResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PutApiDraftQuotesByIdResponseTransformer = (data: any) => Promise<PutApiDraftQuotesByIdResponse>;

export const PutApiDraftQuotesByIdResponseTransformer: PutApiDraftQuotesByIdResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiDraftQuotesByIdOptionsResponseTransformer = (data: any) => Promise<PostApiDraftQuotesByIdOptionsResponse>;

export const PostApiDraftQuotesByIdOptionsResponseTransformer: PostApiDraftQuotesByIdOptionsResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type DeleteApiDraftQuotesByIdOptionsByOptionIdResponseTransformer = (data: any) => Promise<DeleteApiDraftQuotesByIdOptionsByOptionIdResponse>;

export const DeleteApiDraftQuotesByIdOptionsByOptionIdResponseTransformer: DeleteApiDraftQuotesByIdOptionsByOptionIdResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};

export type PostApiDraftQuotesByIdFinalizeResponseTransformer = (data: any) => Promise<PostApiDraftQuotesByIdFinalizeResponse>;

export const PostApiDraftQuotesByIdFinalizeResponseTransformer: PostApiDraftQuotesByIdFinalizeResponseTransformer = async (data) => {
    DraftQuoteResponseCommonApiResponseModelResponseTransformer(data);
    return data;
};