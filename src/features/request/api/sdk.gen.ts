// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, formDataBodySerializer } from '@hey-api/client-axios';
import type { GetApiAssigneeData, GetApiAssigneeError, GetApiAssigneeResponse, PostApiAssigneeData, PostApiAssigneeError, PostApiAssigneeResponse, GetApiAssigneeByIdData, GetApiAssigneeByIdError, GetApiAssigneeByIdResponse, PutApiAssigneeByIdData, PutApiAssigneeByIdError, PutApiAssigneeByIdResponse, DeleteApiAssigneeByIdData, DeleteApiAssigneeByIdError, DeleteApiAssigneeByIdResponse, PostApiEmailData, PostApiEmailError, PostApiEmailResponse, GetEmailConfigError, GetEmailConfigResponse, PostEmailConfigData, PostEmailConfigError, PostEmailConfigResponse, PutEmailConfigByIdData, PutEmailConfigByIdError, PutEmailConfigByIdResponse, PostApiFileUploadData, PostApiFileUploadError, PostApiFileUploadResponse, GetApiFileByBlobNameData, GetApiFileByBlobNameError, GetApiFileByBlobNameResponse, DeleteApiFileByBlobNameData, DeleteApiFileByBlobNameError, DeleteApiFileByBlobNameResponse, GetApiFileUriByBlobNameData, GetApiFileUriByBlobNameError, GetApiFileUriByBlobNameResponse, PostApiRequestData, PostApiRequestError, PostApiRequestResponse, GetApiRequestData, GetApiRequestError, GetApiRequestResponse, GetApiRequestByIdData, GetApiRequestByIdError, GetApiRequestByIdResponse, DeleteApiRequestByIdData, DeleteApiRequestByIdError, DeleteApiRequestByIdResponse, PutApiRequestUpdateByIdData, PutApiRequestUpdateByIdError, PutApiRequestUpdateByIdResponse, PutApiRequestByIdChangeStatusData, PutApiRequestByIdChangeStatusError, PutApiRequestByIdChangeStatusResponse, PostApiRequestAdminEnrichCompanyNamesError, PostApiRequestAdminEnrichCompanyNamesResponse, GetApiRequestQuoteNotesData, GetApiRequestQuoteNotesError, GetApiRequestQuoteNotesResponse, PostApiRequestQuoteNotesData, PostApiRequestQuoteNotesError, PostApiRequestQuoteNotesResponse, GetApiRequestQuoteNotesByIdData, GetApiRequestQuoteNotesByIdError, GetApiRequestQuoteNotesByIdResponse, PutApiRequestQuoteNotesByIdData, PutApiRequestQuoteNotesByIdError, PutApiRequestQuoteNotesByIdResponse, DeleteApiRequestQuoteNotesByIdData, DeleteApiRequestQuoteNotesByIdError, DeleteApiRequestQuoteNotesByIdResponse, PostApiSmsSendData, PostApiSmsSendError, PostApiSmsSendResponse, GetApiTrackingByTrackingNumberData, GetApiTrackingByTrackingNumberError, GetApiTrackingByTrackingNumberResponse, PostUserGroupUsersByUserIdData, PostUserGroupUsersByUserIdError, PostUserGroupUsersByUserIdResponse, GetUserGroupUsersByUserIdData, GetUserGroupUsersByUserIdError, GetUserGroupUsersByUserIdResponse, DeleteUserGroupUsersByUserIdData, DeleteUserGroupUsersByUserIdError, DeleteUserGroupUsersByUserIdResponse, GetUserGroupUsersError, GetUserGroupUsersResponse, PostWhatsAppSendmessageData, PostWhatsAppSendmessageError, PostWhatsAppSendmessageResponse } from './types.gen';

export const client = createClient(createConfig());

export const getApiAssignee = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiAssigneeData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAssigneeResponse, GetApiAssigneeError, ThrowOnError>({
        ...options,
        url: '/api/Assignee'
    });
};

export const postApiAssignee = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAssigneeData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAssigneeResponse, PostApiAssigneeError, ThrowOnError>({
        ...options,
        url: '/api/Assignee'
    });
};

export const getApiAssigneeById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiAssigneeByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAssigneeByIdResponse, GetApiAssigneeByIdError, ThrowOnError>({
        ...options,
        url: '/api/Assignee/{id}'
    });
};

export const putApiAssigneeById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiAssigneeByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiAssigneeByIdResponse, PutApiAssigneeByIdError, ThrowOnError>({
        ...options,
        url: '/api/Assignee/{id}'
    });
};

export const deleteApiAssigneeById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiAssigneeByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiAssigneeByIdResponse, DeleteApiAssigneeByIdError, ThrowOnError>({
        ...options,
        url: '/api/Assignee/{id}'
    });
};

export const postApiEmail = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiEmailData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiEmailResponse, PostApiEmailError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/Email'
    });
};

export const getEmailConfig = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetEmailConfigResponse, GetEmailConfigError, ThrowOnError>({
        ...options,
        url: '/EmailConfig'
    });
};

export const postEmailConfig = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostEmailConfigData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostEmailConfigResponse, PostEmailConfigError, ThrowOnError>({
        ...options,
        url: '/EmailConfig'
    });
};

export const putEmailConfigById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutEmailConfigByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutEmailConfigByIdResponse, PutEmailConfigByIdError, ThrowOnError>({
        ...options,
        url: '/EmailConfig/{id}'
    });
};

export const postApiFileUpload = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiFileUploadData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiFileUploadResponse, PostApiFileUploadError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/File/upload'
    });
};

export const getApiFileByBlobName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiFileByBlobNameData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiFileByBlobNameResponse, GetApiFileByBlobNameError, ThrowOnError>({
        ...options,
        url: '/api/File/{blobName}'
    });
};

export const deleteApiFileByBlobName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiFileByBlobNameData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiFileByBlobNameResponse, DeleteApiFileByBlobNameError, ThrowOnError>({
        ...options,
        url: '/api/File/{blobName}'
    });
};

export const getApiFileUriByBlobName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiFileUriByBlobNameData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiFileUriByBlobNameResponse, GetApiFileUriByBlobNameError, ThrowOnError>({
        ...options,
        url: '/api/File/uri/{blobName}'
    });
};

export const postApiRequest = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiRequestData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiRequestResponse, PostApiRequestError, ThrowOnError>({
        ...options,
        url: '/api/Request'
    });
};

export const getApiRequest = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiRequestData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiRequestResponse, GetApiRequestError, ThrowOnError>({
        ...options,
        url: '/api/Request'
    });
};

export const getApiRequestById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiRequestByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiRequestByIdResponse, GetApiRequestByIdError, ThrowOnError>({
        ...options,
        url: '/api/Request/{id}'
    });
};

export const deleteApiRequestById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiRequestByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiRequestByIdResponse, DeleteApiRequestByIdError, ThrowOnError>({
        ...options,
        url: '/api/Request/{id}'
    });
};

export const putApiRequestUpdateById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiRequestUpdateByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiRequestUpdateByIdResponse, PutApiRequestUpdateByIdError, ThrowOnError>({
        ...options,
        url: '/api/Request/update/{id}'
    });
};

export const putApiRequestByIdChangeStatus = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiRequestByIdChangeStatusData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiRequestByIdChangeStatusResponse, PutApiRequestByIdChangeStatusError, ThrowOnError>({
        ...options,
        url: '/api/Request/{id}/changeStatus'
    });
};

export const postApiRequestAdminEnrichCompanyNames = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiRequestAdminEnrichCompanyNamesResponse, PostApiRequestAdminEnrichCompanyNamesError, ThrowOnError>({
        ...options,
        url: '/api/Request/admin/enrich-company-names'
    });
};

export const getApiRequestQuoteNotes = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiRequestQuoteNotesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiRequestQuoteNotesResponse, GetApiRequestQuoteNotesError, ThrowOnError>({
        ...options,
        url: '/api/RequestQuoteNotes'
    });
};

export const postApiRequestQuoteNotes = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiRequestQuoteNotesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiRequestQuoteNotesResponse, PostApiRequestQuoteNotesError, ThrowOnError>({
        ...options,
        url: '/api/RequestQuoteNotes'
    });
};

export const getApiRequestQuoteNotesById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiRequestQuoteNotesByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiRequestQuoteNotesByIdResponse, GetApiRequestQuoteNotesByIdError, ThrowOnError>({
        ...options,
        url: '/api/RequestQuoteNotes/{id}'
    });
};

export const putApiRequestQuoteNotesById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiRequestQuoteNotesByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiRequestQuoteNotesByIdResponse, PutApiRequestQuoteNotesByIdError, ThrowOnError>({
        ...options,
        url: '/api/RequestQuoteNotes/{id}'
    });
};

export const deleteApiRequestQuoteNotesById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiRequestQuoteNotesByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiRequestQuoteNotesByIdResponse, DeleteApiRequestQuoteNotesByIdError, ThrowOnError>({
        ...options,
        url: '/api/RequestQuoteNotes/{id}'
    });
};

export const postApiSmsSend = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSmsSendData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSmsSendResponse, PostApiSmsSendError, ThrowOnError>({
        ...options,
        url: '/api/Sms/send'
    });
};

export const getApiTrackingByTrackingNumber = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiTrackingByTrackingNumberData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiTrackingByTrackingNumberResponse, GetApiTrackingByTrackingNumberError, ThrowOnError>({
        ...options,
        url: '/api/Tracking/{trackingNumber}'
    });
};

export const postUserGroupUsersByUserId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostUserGroupUsersByUserIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostUserGroupUsersByUserIdResponse, PostUserGroupUsersByUserIdError, ThrowOnError>({
        ...options,
        url: '/UserGroup/users/{userId}'
    });
};

export const getUserGroupUsersByUserId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetUserGroupUsersByUserIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserGroupUsersByUserIdResponse, GetUserGroupUsersByUserIdError, ThrowOnError>({
        ...options,
        url: '/UserGroup/users/{userId}'
    });
};

export const deleteUserGroupUsersByUserId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteUserGroupUsersByUserIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteUserGroupUsersByUserIdResponse, DeleteUserGroupUsersByUserIdError, ThrowOnError>({
        ...options,
        url: '/UserGroup/users/{userId}'
    });
};

export const getUserGroupUsers = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserGroupUsersResponse, GetUserGroupUsersError, ThrowOnError>({
        ...options,
        url: '/UserGroup/users'
    });
};

export const postWhatsAppSendmessage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostWhatsAppSendmessageData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostWhatsAppSendmessageResponse, PostWhatsAppSendmessageError, ThrowOnError>({
        ...options,
        url: '/WhatsApp/sendmessage'
    });
};