// This file is auto-generated by @hey-api/openapi-ts

export type Assignee = {
    id?: (string) | null;
    name?: (string) | null;
    email?: (string) | null;
    userId?: (string) | null;
    idUser?: (string) | null;
};

export type ChangeStatusRequest = {
    newStatus?: StatusRequest;
    customMessage?: (string) | null;
};

export type EmailConfig = {
    id?: (string) | null;
    name?: (string) | null;
    smtpServer?: (string) | null;
    port?: number;
    username?: (string) | null;
    password?: (string) | null;
    enableSsl?: boolean;
};

export type GraphApiUser = {
    id?: (string) | null;
    displayName?: (string) | null;
    userPrincipalName?: (string) | null;
    mail?: (string) | null;
    graphObjectId?: (string) | null;
};

export type LocationViewModel = {
    addressLine?: (string) | null;
    city: string;
    postalCode?: (string) | null;
    country: string;
};

export enum NoteType {
    GENERAL = 'General',
    INTERNAL = 'Internal',
    CUSTOMER = 'Customer',
    INFORMATION_REQUEST = 'InformationRequest'
}

export type RequestQuoteListViewModel = {
    requestQuoteId?: (string) | null;
    trackingNumber?: (string) | null;
    customerId?: number;
    companyName?: (string) | null;
    status?: (string) | null;
    createdAt?: Date;
    updatedAt?: (Date) | null;
    productName?: (string) | null;
    incoterm?: (string) | null;
    packingType?: (string) | null;
    pickupCity?: (string) | null;
    pickupCountry?: (string) | null;
    deliveryCity?: (string) | null;
    deliveryCountry?: (string) | null;
    assigneeId?: (string) | null;
    assigneeDisplayName?: (string) | null;
};

export type RequestQuoteNote = {
    id?: (string) | null;
    requestQuoteId?: (string) | null;
    content?: (string) | null;
    userId?: (string) | null;
    isInternal?: boolean;
    type?: NoteType;
    subject?: (string) | null;
    email?: (string) | null;
    idUser?: (string) | null;
    createdAt?: Date;
};

export type RequestQuoteResponseViewModel = {
    requestQuoteId?: (string) | null;
    trackingNumber?: (string) | null;
    customerId?: number;
    companyName?: (string) | null;
    contactFullName?: (string) | null;
    email?: (string) | null;
    phone?: (string) | null;
    assigneeId?: (string) | null;
    assigneeDisplayName?: (string) | null;
    pickupLocation?: LocationViewModel;
    deliveryLocation?: LocationViewModel;
    pickupDate?: Date;
    deliveryDate?: Date;
    goodsDescription?: (string) | null;
    numberOfUnits?: number;
    totalWeightKg?: number;
    totalDimensions?: (string) | null;
    isDangerousGoods?: boolean;
    requiresTemperatureControl?: boolean;
    isFragileOrHighValue?: boolean;
    requiresSpecialHandling?: boolean;
    specialInstructions?: (string) | null;
    preferredTransportMode?: number;
    additionalComments?: (string) | null;
    createdAt?: Date;
    updatedAt?: Date;
    status?: (string) | null;
    productId?: number;
    productName?: (string) | null;
    incoterm?: (string) | null;
    packingType?: (string) | null;
    tags?: (string) | null;
    cargoType?: TypeOfCargo;
    quantity?: (number) | null;
    details?: (string) | null;
};

export type RequestQuoteViewModel = {
    requestQuoteId?: (string) | null;
    customerId: number;
    pickupLocation: LocationViewModel;
    deliveryLocation: LocationViewModel;
    cargoType?: TypeOfCargo;
    quantity?: (number) | null;
    details?: (string) | null;
    tags?: (string) | null;
    packingType?: (string) | null;
    assigneeId?: (string) | null;
    productId: number;
    productName?: (string) | null;
    pickupDate?: (Date) | null;
    deliveryDate?: (Date) | null;
    goodsDescription?: (string) | null;
    numberOfUnits?: (number) | null;
    totalWeightKg?: (number) | null;
    totalDimensions?: (string) | null;
    isDangerousGoods?: boolean;
    requiresTemperatureControl?: boolean;
    isFragileOrHighValue?: boolean;
    requiresSpecialHandling?: boolean;
    specialInstructions?: (string) | null;
    preferredTransportMode?: (number) | null;
    additionalComments?: (string) | null;
    incoterm?: (string) | null;
};

export enum StatusRequest {
    NEW = 'New',
    EN_ATTENTE = 'EnAttente',
    VALIDER = 'Valider',
    REJETER = 'Rejeter',
    EN_COURS_DE_TRAITEMENT = 'EnCoursDeTraitement',
    EN_TRANSIT = 'EnTransit',
    EN_DOUANE = 'EnDouane',
    LIVRAISON_EN_COURS = 'LivraisonEnCours',
    LIVRE = 'Livre',
    ANNULE = 'Annule',
    RETOUR = 'Retour',
    PROBLÈME = 'Problème',
    EN_ATTENTE_DE_FACTURATION = 'EnAttenteDeFacturation'
}

export enum TypeOfCargo {
    CONTAINER = 'Container',
    CONVENTIONAL = 'Conventional',
    ROLL_ON_ROLL_OFF = 'RollOnRollOff'
}

export type GetApiAssigneeData = {
    query?: {
        nameFilter?: string;
        userIdFilter?: string;
    };
};

export type GetApiAssigneeResponse = (Array<Assignee>);

export type GetApiAssigneeError = unknown;

export type PostApiAssigneeData = {
    body?: Assignee;
};

export type PostApiAssigneeResponse = (Assignee);

export type PostApiAssigneeError = unknown;

export type GetApiAssigneeByIdData = {
    path: {
        id: string;
    };
};

export type GetApiAssigneeByIdResponse = (Assignee);

export type GetApiAssigneeByIdError = unknown;

export type PutApiAssigneeByIdData = {
    body?: Assignee;
    path: {
        id: string;
    };
};

export type PutApiAssigneeByIdResponse = (unknown);

export type PutApiAssigneeByIdError = unknown;

export type DeleteApiAssigneeByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiAssigneeByIdResponse = (unknown);

export type DeleteApiAssigneeByIdError = unknown;

export type PostApiEmailData = {
    body?: {
        Id?: string;
        From?: string;
        To?: string;
        Subject?: string;
        HtmlContent?: string;
        Attachments?: Array<((Blob | File))>;
    };
};

export type PostApiEmailResponse = (unknown);

export type PostApiEmailError = unknown;

export type GetEmailConfigResponse = (unknown);

export type GetEmailConfigError = unknown;

export type PostEmailConfigData = {
    body?: EmailConfig;
};

export type PostEmailConfigResponse = (unknown);

export type PostEmailConfigError = unknown;

export type PutEmailConfigByIdData = {
    body?: EmailConfig;
    path: {
        id: string;
    };
};

export type PutEmailConfigByIdResponse = (unknown);

export type PutEmailConfigByIdError = unknown;

export type PostApiFileUploadData = {
    body?: {
        file?: (Blob | File);
    };
};

export type PostApiFileUploadResponse = (unknown);

export type PostApiFileUploadError = unknown;

export type GetApiFileByBlobNameData = {
    path: {
        blobName: string;
    };
};

export type GetApiFileByBlobNameResponse = (unknown);

export type GetApiFileByBlobNameError = unknown;

export type DeleteApiFileByBlobNameData = {
    path: {
        blobName: string;
    };
};

export type DeleteApiFileByBlobNameResponse = (unknown);

export type DeleteApiFileByBlobNameError = unknown;

export type GetApiFileUriByBlobNameData = {
    path: {
        blobName: string;
    };
};

export type GetApiFileUriByBlobNameResponse = (unknown);

export type GetApiFileUriByBlobNameError = unknown;

export type PostApiRequestData = {
    body?: RequestQuoteViewModel;
};

export type PostApiRequestResponse = ({
    [key: string]: (string);
});

export type PostApiRequestError = (unknown);

export type GetApiRequestData = {
    query?: {
        assigneeId?: string;
        companyName?: string;
        createdFrom?: Date;
        createdTo?: Date;
        customerId?: number;
        deliveryCity?: string;
        incoterm?: string;
        page?: number;
        pageSize?: number;
        pickupCity?: string;
        productName?: string;
        search?: string;
        sortBy?: string;
        sortOrder?: string;
        status?: string;
        trackingNumber?: string;
    };
};

export type GetApiRequestResponse = (Array<RequestQuoteListViewModel>);

export type GetApiRequestError = (unknown);

export type GetApiRequestByIdData = {
    path: {
        id: string;
    };
};

export type GetApiRequestByIdResponse = (RequestQuoteResponseViewModel);

export type GetApiRequestByIdError = (unknown);

export type DeleteApiRequestByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiRequestByIdResponse = (unknown);

export type DeleteApiRequestByIdError = unknown;

export type PutApiRequestUpdateByIdData = {
    body?: RequestQuoteViewModel;
    path: {
        id: string;
    };
};

export type PutApiRequestUpdateByIdResponse = (unknown);

export type PutApiRequestUpdateByIdError = (unknown);

export type PutApiRequestByIdChangeStatusData = {
    body?: ChangeStatusRequest;
    path: {
        id: string;
    };
};

export type PutApiRequestByIdChangeStatusResponse = (unknown);

export type PutApiRequestByIdChangeStatusError = unknown;

export type PostApiRequestAdminEnrichCompanyNamesResponse = (unknown);

export type PostApiRequestAdminEnrichCompanyNamesError = unknown;

export type GetApiRequestQuoteNotesData = {
    query?: {
        createdAtFrom?: Date;
        createdAtTo?: Date;
        isInternal?: boolean;
        noteType?: NoteType;
        requestQuoteId?: string;
        userIdFilter?: string;
    };
};

export type GetApiRequestQuoteNotesResponse = (unknown);

export type GetApiRequestQuoteNotesError = unknown;

export type PostApiRequestQuoteNotesData = {
    body?: RequestQuoteNote;
};

export type PostApiRequestQuoteNotesResponse = (unknown);

export type PostApiRequestQuoteNotesError = unknown;

export type GetApiRequestQuoteNotesByIdData = {
    path: {
        id: string;
    };
};

export type GetApiRequestQuoteNotesByIdResponse = (unknown);

export type GetApiRequestQuoteNotesByIdError = unknown;

export type PutApiRequestQuoteNotesByIdData = {
    body?: RequestQuoteNote;
    path: {
        id: string;
    };
};

export type PutApiRequestQuoteNotesByIdResponse = (unknown);

export type PutApiRequestQuoteNotesByIdError = unknown;

export type DeleteApiRequestQuoteNotesByIdData = {
    path: {
        id: string;
    };
};

export type DeleteApiRequestQuoteNotesByIdResponse = (unknown);

export type DeleteApiRequestQuoteNotesByIdError = unknown;

export type PostApiSmsSendData = {
    query?: {
        fromPhoneNumber?: string;
        messageText?: string;
        toPhoneNumber?: string;
    };
};

export type PostApiSmsSendResponse = (unknown);

export type PostApiSmsSendError = unknown;

export type GetApiTrackingByTrackingNumberData = {
    path: {
        trackingNumber: string;
    };
};

export type GetApiTrackingByTrackingNumberResponse = (unknown);

export type GetApiTrackingByTrackingNumberError = unknown;

export type PostUserGroupUsersByUserIdData = {
    path: {
        userId: string;
    };
};

export type PostUserGroupUsersByUserIdResponse = (unknown);

export type PostUserGroupUsersByUserIdError = unknown;

export type GetUserGroupUsersByUserIdData = {
    path: {
        userId: string;
    };
};

export type GetUserGroupUsersByUserIdResponse = (GraphApiUser);

export type GetUserGroupUsersByUserIdError = unknown;

export type DeleteUserGroupUsersByUserIdData = {
    path: {
        userId: string;
    };
};

export type DeleteUserGroupUsersByUserIdResponse = (unknown);

export type DeleteUserGroupUsersByUserIdError = unknown;

export type GetUserGroupUsersResponse = (Array<GraphApiUser>);

export type GetUserGroupUsersError = unknown;

export type PostWhatsAppSendmessageData = {
    query?: {
        fromWhatsAppNumber?: string;
        messageText?: string;
        toPhoneNumber?: string;
    };
};

export type PostWhatsAppSendmessageResponse = (unknown);

export type PostWhatsAppSendmessageError = unknown;

export type GetApiRequestResponseTransformer = (data: any) => Promise<GetApiRequestResponse>;

export type RequestQuoteListViewModelModelResponseTransformer = (data: any) => RequestQuoteListViewModel;

export const RequestQuoteListViewModelModelResponseTransformer: RequestQuoteListViewModelModelResponseTransformer = data => {
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    return data;
};

export const GetApiRequestResponseTransformer: GetApiRequestResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(RequestQuoteListViewModelModelResponseTransformer);
    }
    return data;
};

export type GetApiRequestByIdResponseTransformer = (data: any) => Promise<GetApiRequestByIdResponse>;

export type RequestQuoteResponseViewModelModelResponseTransformer = (data: any) => RequestQuoteResponseViewModel;

export const RequestQuoteResponseViewModelModelResponseTransformer: RequestQuoteResponseViewModelModelResponseTransformer = data => {
    if (data?.pickupDate) {
        data.pickupDate = new Date(data.pickupDate);
    }
    if (data?.deliveryDate) {
        data.deliveryDate = new Date(data.deliveryDate);
    }
    if (data?.createdAt) {
        data.createdAt = new Date(data.createdAt);
    }
    if (data?.updatedAt) {
        data.updatedAt = new Date(data.updatedAt);
    }
    return data;
};

export const GetApiRequestByIdResponseTransformer: GetApiRequestByIdResponseTransformer = async (data) => {
    RequestQuoteResponseViewModelModelResponseTransformer(data);
    return data;
};