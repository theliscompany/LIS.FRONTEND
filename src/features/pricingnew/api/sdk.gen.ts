// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, formDataBodySerializer } from '@hey-api/client-axios';
import type { PostApiHaulageData, PostApiHaulageError, PostApiHaulageResponse, GetApiHaulageError, GetApiHaulageResponse, GetApiHaulageByIdData, GetApiHaulageByIdError, GetApiHaulageByIdResponse, PutApiHaulageByIdData, PutApiHaulageByIdError, PutApiHaulageByIdResponse, DeleteApiHaulageByIdData, DeleteApiHaulageByIdError, DeleteApiHaulageByIdResponse, PostApiHaulageSearchData, PostApiHaulageSearchError, PostApiHaulageSearchResponse, GetApiHaulageByIdPayloadData, GetApiHaulageByIdPayloadError, GetApiHaulageByIdPayloadResponse, GetError, GetResponse, GetErrorError, GetErrorResponse, GetApiMiscellaneousError, GetApiMiscellaneousResponse, PostApiMiscellaneousData, PostApiMiscellaneousError, PostApiMiscellaneousResponse, GetApiMiscellaneousByIdData, GetApiMiscellaneousByIdError, GetApiMiscellaneousByIdResponse, PutApiMiscellaneousByIdData, PutApiMiscellaneousByIdError, PutApiMiscellaneousByIdResponse, DeleteApiMiscellaneousByIdData, DeleteApiMiscellaneousByIdError, DeleteApiMiscellaneousByIdResponse, PostApiMiscellaneousSearchData, PostApiMiscellaneousSearchError, PostApiMiscellaneousSearchResponse, GetApiMiscellaneousProviderByServiceProviderIdData, GetApiMiscellaneousProviderByServiceProviderIdError, GetApiMiscellaneousProviderByServiceProviderIdResponse, GetApiMiscellaneousValidByValidDateData, GetApiMiscellaneousValidByValidDateError, GetApiMiscellaneousValidByValidDateResponse, PostApiOcrExtractTextData, PostApiOcrExtractTextError, PostApiOcrExtractTextResponse, PostApiOcrExtractAndProcessData, PostApiOcrExtractAndProcessError, PostApiOcrExtractAndProcessResponse, PostApiOcrBulkProcessData, PostApiOcrBulkProcessError, PostApiOcrBulkProcessResponse, GetApiOcrProcessingStatusByJobIdData, GetApiOcrProcessingStatusByJobIdError, GetApiOcrProcessingStatusByJobIdResponse, GetApiSeaFreightSearchData, GetApiSeaFreightSearchError, GetApiSeaFreightSearchResponse, PostApiSeaFreightSearchAdvancedData, PostApiSeaFreightSearchAdvancedError, PostApiSeaFreightSearchAdvancedResponse, PostApiSeaFreightSearchQuickData, PostApiSeaFreightSearchQuickError, PostApiSeaFreightSearchQuickResponse, PostApiSeaFreightData, PostApiSeaFreightError, PostApiSeaFreightResponse, GetApiSeaFreightData, GetApiSeaFreightError, GetApiSeaFreightResponse, GetApiSeaFreightByIdData, GetApiSeaFreightByIdError, GetApiSeaFreightByIdResponse, PutApiSeaFreightByIdData, PutApiSeaFreightByIdError, PutApiSeaFreightByIdResponse, DeleteApiSeaFreightByIdData, DeleteApiSeaFreightByIdError, DeleteApiSeaFreightByIdResponse, GetApiSeaFreightQuoteByQuoteNumberData, GetApiSeaFreightQuoteByQuoteNumberError, GetApiSeaFreightQuoteByQuoteNumberResponse, GetApiSeaFreightCarrierByCarrierIdData, GetApiSeaFreightCarrierByCarrierIdError, GetApiSeaFreightCarrierByCarrierIdResponse, GetApiSeaFreightValidData, GetApiSeaFreightValidError, GetApiSeaFreightValidResponse, GetApiSeaFreightRouteData, GetApiSeaFreightRouteError, GetApiSeaFreightRouteResponse, PostApiSeaFreightAnalyticsAggregationsData, PostApiSeaFreightAnalyticsAggregationsError, PostApiSeaFreightAnalyticsAggregationsResponse, GetApiSeaFreightAnalyticsPopularRoutesData, GetApiSeaFreightAnalyticsPopularRoutesError, GetApiSeaFreightAnalyticsPopularRoutesResponse, GetApiSeaFreightAnalyticsTopCarriersData, GetApiSeaFreightAnalyticsTopCarriersError, GetApiSeaFreightAnalyticsTopCarriersResponse, GetApiSeaFreightAnalyticsPriceStatisticsData, GetApiSeaFreightAnalyticsPriceStatisticsError, GetApiSeaFreightAnalyticsPriceStatisticsResponse, DeleteApiSeaFreightCacheData, DeleteApiSeaFreightCacheError, DeleteApiSeaFreightCacheResponse, GetApiSeaFreightCacheStatisticsError, GetApiSeaFreightCacheStatisticsResponse, PostApiSeaFreightUtilitiesGenerateQuoteNumbersError, PostApiSeaFreightUtilitiesGenerateQuoteNumbersResponse, GetApiSeaFreightUtilitiesValidateQuoteByQuoteNumberData, GetApiSeaFreightUtilitiesValidateQuoteByQuoteNumberError, GetApiSeaFreightUtilitiesValidateQuoteByQuoteNumberResponse, PostApiSeaFreightComparisonCompareData, PostApiSeaFreightComparisonCompareError, PostApiSeaFreightComparisonCompareResponse, PostApiSeaFreightComparisonImportAndCompareData, PostApiSeaFreightComparisonImportAndCompareError, PostApiSeaFreightComparisonImportAndCompareResponse, GetApiSeaFreightComparisonDefaultCriteriaError, GetApiSeaFreightComparisonDefaultCriteriaResponse, PostApiSeaFreightComparisonSearchAndCompareData, PostApiSeaFreightComparisonSearchAndCompareError, PostApiSeaFreightComparisonSearchAndCompareResponse, PostApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCodeData, PostApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCodeError, PostApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCodeResponse, PostApiSeaFreightComparisonCarrierByCarrierIdData, PostApiSeaFreightComparisonCarrierByCarrierIdError, PostApiSeaFreightComparisonCarrierByCarrierIdResponse, PostApiSeaFreightComparisonValidData, PostApiSeaFreightComparisonValidError, PostApiSeaFreightComparisonValidResponse, PostApiSeaFreightComparisonAllData, PostApiSeaFreightComparisonAllError, PostApiSeaFreightComparisonAllResponse, PostApiWebhookMakecomError, PostApiWebhookMakecomResponse, GetApiWebhookTestError, GetApiWebhookTestResponse } from './types.gen';

export const client = createClient(createConfig());

export const postApiHaulage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiHaulageData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiHaulageResponse, PostApiHaulageError, ThrowOnError>({
        ...options,
        url: '/api/Haulage'
    });
};

export const getApiHaulage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiHaulageResponse, GetApiHaulageError, ThrowOnError>({
        ...options,
        url: '/api/Haulage'
    });
};

export const getApiHaulageById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiHaulageByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiHaulageByIdResponse, GetApiHaulageByIdError, ThrowOnError>({
        ...options,
        url: '/api/Haulage/{id}'
    });
};

export const putApiHaulageById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiHaulageByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiHaulageByIdResponse, PutApiHaulageByIdError, ThrowOnError>({
        ...options,
        url: '/api/Haulage/{id}'
    });
};

export const deleteApiHaulageById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiHaulageByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiHaulageByIdResponse, DeleteApiHaulageByIdError, ThrowOnError>({
        ...options,
        url: '/api/Haulage/{id}'
    });
};

export const postApiHaulageSearch = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiHaulageSearchData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiHaulageSearchResponse, PostApiHaulageSearchError, ThrowOnError>({
        ...options,
        url: '/api/Haulage/search'
    });
};

export const getApiHaulageByIdPayload = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiHaulageByIdPayloadData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiHaulageByIdPayloadResponse, GetApiHaulageByIdPayloadError, ThrowOnError>({
        ...options,
        url: '/api/Haulage/{id}/payload'
    });
};

export const get = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetResponse, GetError, ThrowOnError>({
        ...options,
        url: '/'
    });
};

export const getError = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetErrorResponse, GetErrorError, ThrowOnError>({
        ...options,
        url: '/error'
    });
};

export const getApiMiscellaneous = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiMiscellaneousResponse, GetApiMiscellaneousError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous'
    });
};

export const postApiMiscellaneous = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiMiscellaneousData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiMiscellaneousResponse, PostApiMiscellaneousError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous'
    });
};

export const getApiMiscellaneousById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiMiscellaneousByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiMiscellaneousByIdResponse, GetApiMiscellaneousByIdError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous/{id}'
    });
};

export const putApiMiscellaneousById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiMiscellaneousByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiMiscellaneousByIdResponse, PutApiMiscellaneousByIdError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous/{id}'
    });
};

export const deleteApiMiscellaneousById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiMiscellaneousByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiMiscellaneousByIdResponse, DeleteApiMiscellaneousByIdError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous/{id}'
    });
};

export const postApiMiscellaneousSearch = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiMiscellaneousSearchData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiMiscellaneousSearchResponse, PostApiMiscellaneousSearchError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous/search'
    });
};

export const getApiMiscellaneousProviderByServiceProviderId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiMiscellaneousProviderByServiceProviderIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiMiscellaneousProviderByServiceProviderIdResponse, GetApiMiscellaneousProviderByServiceProviderIdError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous/provider/{serviceProviderId}'
    });
};

export const getApiMiscellaneousValidByValidDate = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiMiscellaneousValidByValidDateData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiMiscellaneousValidByValidDateResponse, GetApiMiscellaneousValidByValidDateError, ThrowOnError>({
        ...options,
        url: '/api/Miscellaneous/valid/{validDate}'
    });
};

export const postApiOcrExtractText = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiOcrExtractTextData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiOcrExtractTextResponse, PostApiOcrExtractTextError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/Ocr/extract-text'
    });
};

export const postApiOcrExtractAndProcess = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiOcrExtractAndProcessData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiOcrExtractAndProcessResponse, PostApiOcrExtractAndProcessError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/Ocr/extract-and-process'
    });
};

export const postApiOcrBulkProcess = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiOcrBulkProcessData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiOcrBulkProcessResponse, PostApiOcrBulkProcessError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/Ocr/bulk-process'
    });
};

export const getApiOcrProcessingStatusByJobId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiOcrProcessingStatusByJobIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOcrProcessingStatusByJobIdResponse, GetApiOcrProcessingStatusByJobIdError, ThrowOnError>({
        ...options,
        url: '/api/Ocr/processing-status/{jobId}'
    });
};

export const getApiSeaFreightSearch = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiSeaFreightSearchData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightSearchResponse, GetApiSeaFreightSearchError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/search'
    });
};

export const postApiSeaFreightSearchAdvanced = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightSearchAdvancedData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightSearchAdvancedResponse, PostApiSeaFreightSearchAdvancedError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/search/advanced'
    });
};

export const postApiSeaFreightSearchQuick = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightSearchQuickData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightSearchQuickResponse, PostApiSeaFreightSearchQuickError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/search/quick'
    });
};

export const postApiSeaFreight = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightResponse, PostApiSeaFreightError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight'
    });
};

export const getApiSeaFreight = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiSeaFreightData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightResponse, GetApiSeaFreightError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight'
    });
};

export const getApiSeaFreightById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiSeaFreightByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightByIdResponse, GetApiSeaFreightByIdError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/{id}'
    });
};

export const putApiSeaFreightById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiSeaFreightByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiSeaFreightByIdResponse, PutApiSeaFreightByIdError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/{id}'
    });
};

export const deleteApiSeaFreightById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiSeaFreightByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiSeaFreightByIdResponse, DeleteApiSeaFreightByIdError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/{id}'
    });
};

export const getApiSeaFreightQuoteByQuoteNumber = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiSeaFreightQuoteByQuoteNumberData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightQuoteByQuoteNumberResponse, GetApiSeaFreightQuoteByQuoteNumberError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/quote/{quoteNumber}'
    });
};

export const getApiSeaFreightCarrierByCarrierId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiSeaFreightCarrierByCarrierIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightCarrierByCarrierIdResponse, GetApiSeaFreightCarrierByCarrierIdError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/carrier/{carrierId}'
    });
};

export const getApiSeaFreightValid = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiSeaFreightValidData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightValidResponse, GetApiSeaFreightValidError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/valid'
    });
};

export const getApiSeaFreightRoute = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiSeaFreightRouteData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightRouteResponse, GetApiSeaFreightRouteError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/route'
    });
};

export const postApiSeaFreightAnalyticsAggregations = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightAnalyticsAggregationsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightAnalyticsAggregationsResponse, PostApiSeaFreightAnalyticsAggregationsError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/analytics/aggregations'
    });
};

export const getApiSeaFreightAnalyticsPopularRoutes = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiSeaFreightAnalyticsPopularRoutesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightAnalyticsPopularRoutesResponse, GetApiSeaFreightAnalyticsPopularRoutesError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/analytics/popular-routes'
    });
};

export const getApiSeaFreightAnalyticsTopCarriers = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiSeaFreightAnalyticsTopCarriersData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightAnalyticsTopCarriersResponse, GetApiSeaFreightAnalyticsTopCarriersError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/analytics/top-carriers'
    });
};

export const getApiSeaFreightAnalyticsPriceStatistics = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiSeaFreightAnalyticsPriceStatisticsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightAnalyticsPriceStatisticsResponse, GetApiSeaFreightAnalyticsPriceStatisticsError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/analytics/price-statistics'
    });
};

export const deleteApiSeaFreightCache = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<DeleteApiSeaFreightCacheData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiSeaFreightCacheResponse, DeleteApiSeaFreightCacheError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/cache'
    });
};

export const getApiSeaFreightCacheStatistics = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightCacheStatisticsResponse, GetApiSeaFreightCacheStatisticsError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/cache/statistics'
    });
};

export const postApiSeaFreightUtilitiesGenerateQuoteNumbers = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightUtilitiesGenerateQuoteNumbersResponse, PostApiSeaFreightUtilitiesGenerateQuoteNumbersError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/utilities/generate-quote-numbers'
    });
};

export const getApiSeaFreightUtilitiesValidateQuoteByQuoteNumber = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiSeaFreightUtilitiesValidateQuoteByQuoteNumberData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightUtilitiesValidateQuoteByQuoteNumberResponse, GetApiSeaFreightUtilitiesValidateQuoteByQuoteNumberError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/utilities/validate-quote/{quoteNumber}'
    });
};

export const postApiSeaFreightComparisonCompare = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightComparisonCompareData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonCompareResponse, PostApiSeaFreightComparisonCompareError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/compare'
    });
};

export const postApiSeaFreightComparisonImportAndCompare = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightComparisonImportAndCompareData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonImportAndCompareResponse, PostApiSeaFreightComparisonImportAndCompareError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/import-and-compare'
    });
};

export const getApiSeaFreightComparisonDefaultCriteria = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiSeaFreightComparisonDefaultCriteriaResponse, GetApiSeaFreightComparisonDefaultCriteriaError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/default-criteria'
    });
};

export const postApiSeaFreightComparisonSearchAndCompare = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightComparisonSearchAndCompareData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonSearchAndCompareResponse, PostApiSeaFreightComparisonSearchAndCompareError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/search-and-compare'
    });
};

export const postApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCode = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCodeData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCodeResponse, PostApiSeaFreightComparisonRouteByOriginPortCodeByDestinationPortCodeError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/route/{originPortCode}/{destinationPortCode}'
    });
};

export const postApiSeaFreightComparisonCarrierByCarrierId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiSeaFreightComparisonCarrierByCarrierIdData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonCarrierByCarrierIdResponse, PostApiSeaFreightComparisonCarrierByCarrierIdError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/carrier/{carrierId}'
    });
};

export const postApiSeaFreightComparisonValid = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightComparisonValidData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonValidResponse, PostApiSeaFreightComparisonValidError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/valid'
    });
};

export const postApiSeaFreightComparisonAll = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiSeaFreightComparisonAllData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiSeaFreightComparisonAllResponse, PostApiSeaFreightComparisonAllError, ThrowOnError>({
        ...options,
        url: '/api/SeaFreight/comparison/all'
    });
};

export const postApiWebhookMakecom = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiWebhookMakecomResponse, PostApiWebhookMakecomError, ThrowOnError>({
        ...options,
        url: '/api/Webhook/makecom'
    });
};

export const getApiWebhookTest = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiWebhookTestResponse, GetApiWebhookTestError, ThrowOnError>({
        ...options,
        url: '/api/Webhook/test'
    });
};