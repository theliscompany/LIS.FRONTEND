// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-axios';
import type { GetApiConfigurationHealthKeyvaultError, GetApiConfigurationHealthKeyvaultResponse, GetApiConfigurationAppConfigError, GetApiConfigurationAppConfigResponse, PostApiConfigurationRefreshCacheBySecretNameData, PostApiConfigurationRefreshCacheBySecretNameError, PostApiConfigurationRefreshCacheBySecretNameResponse, PostApiConfigurationClearCacheError, PostApiConfigurationClearCacheResponse, GetApiConfigurationDatabaseStatusError, GetApiConfigurationDatabaseStatusResponse, GetApiConfigurationCacheStatsError, GetApiConfigurationCacheStatsResponse, GetApiEmployeesData, GetApiEmployeesError, GetApiEmployeesResponse, PostApiEmployeesData, PostApiEmployeesError, PostApiEmployeesResponse, GetApiEmployeesByIdData, GetApiEmployeesByIdError, GetApiEmployeesByIdResponse, PutApiEmployeesByIdData, PutApiEmployeesByIdError, PutApiEmployeesByIdResponse, DeleteApiEmployeesByIdData, DeleteApiEmployeesByIdError, DeleteApiEmployeesByIdResponse, PostApiNotificationsData, PostApiNotificationsError, PostApiNotificationsResponse, GetApiOrdersData, GetApiOrdersError, GetApiOrdersResponse, PostApiOrdersData, PostApiOrdersError, PostApiOrdersResponse, GetApiOrdersByIdData, GetApiOrdersByIdError, GetApiOrdersByIdResponse, PutApiOrdersByIdData, PutApiOrdersByIdError, PutApiOrdersByIdResponse, DeleteApiOrdersByIdData, DeleteApiOrdersByIdError, DeleteApiOrdersByIdResponse, GetApiOrdersOrdernumberByOrderNumberData, GetApiOrdersOrdernumberByOrderNumberError, GetApiOrdersOrdernumberByOrderNumberResponse, GetApiOrdersSearchData, GetApiOrdersSearchError, GetApiOrdersSearchResponse, GetApiOrdersCustomerByCustomerIdData, GetApiOrdersCustomerByCustomerIdError, GetApiOrdersCustomerByCustomerIdResponse, GetApiOrdersAttentionError, GetApiOrdersAttentionResponse, GetApiOrdersStatisticsData, GetApiOrdersStatisticsError, GetApiOrdersStatisticsResponse, PostApiOrdersByOrderIdServicesData, PostApiOrdersByOrderIdServicesError, PostApiOrdersByOrderIdServicesResponse, GetApiOrdersByOrderIdServicesData, GetApiOrdersByOrderIdServicesError, GetApiOrdersByOrderIdServicesResponse, PutApiOrdersByOrderIdServicesByTagData, PutApiOrdersByOrderIdServicesByTagError, PutApiOrdersByOrderIdServicesByTagResponse, DeleteApiOrdersByOrderIdServicesByTagData, DeleteApiOrdersByOrderIdServicesByTagError, DeleteApiOrdersByOrderIdServicesByTagResponse, GetApiServiceStatisticsUsageData, GetApiServiceStatisticsUsageError, GetApiServiceStatisticsUsageResponse, GetApiServiceStatisticsUsageByCountryData, GetApiServiceStatisticsUsageByCountryError, GetApiServiceStatisticsUsageByCountryResponse, GetApiShipsData, GetApiShipsError, GetApiShipsResponse, PostApiShipsData, PostApiShipsError, PostApiShipsResponse, GetApiShipsByIdData, GetApiShipsByIdError, GetApiShipsByIdResponse, PutApiShipsByIdData, PutApiShipsByIdError, PutApiShipsByIdResponse, DeleteApiShipsByIdData, DeleteApiShipsByIdError, DeleteApiShipsByIdResponse, GetApiShipsRefactoredData, GetApiShipsRefactoredError, GetApiShipsRefactoredResponse, PostApiShipsRefactoredData, PostApiShipsRefactoredError, PostApiShipsRefactoredResponse, GetApiShipsRefactoredByIdData, GetApiShipsRefactoredByIdError, GetApiShipsRefactoredByIdResponse, PutApiShipsRefactoredByIdData, PutApiShipsRefactoredByIdError, PutApiShipsRefactoredByIdResponse, DeleteApiShipsRefactoredByIdData, DeleteApiShipsRefactoredByIdError, DeleteApiShipsRefactoredByIdResponse, GetApiShipsRefactoredSearchData, GetApiShipsRefactoredSearchError, GetApiShipsRefactoredSearchResponse, GetApiShipsRefactoredLineByShipLineIdData, GetApiShipsRefactoredLineByShipLineIdError, GetApiShipsRefactoredLineByShipLineIdResponse, GetApiShipsRefactoredAvailableData, GetApiShipsRefactoredAvailableError, GetApiShipsRefactoredAvailableResponse, GetApiShipsRefactoredByIdCapacityData, GetApiShipsRefactoredByIdCapacityError, GetApiShipsRefactoredByIdCapacityResponse, GetApiTestRefactoringRepositoryTestError, GetApiTestRefactoringRepositoryTestResponse, GetApiTestRefactoringKeyvaultTestError, GetApiTestRefactoringKeyvaultTestResponse, PostApiTestRefactoringTransactionTestError, PostApiTestRefactoringTransactionTestResponse, GetApiTestRefactoringHealthError, GetApiTestRefactoringHealthResponse } from './types.gen';

export const client = createClient(createConfig());

export const getApiConfigurationHealthKeyvault = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiConfigurationHealthKeyvaultResponse, GetApiConfigurationHealthKeyvaultError, ThrowOnError>({
        ...options,
        url: '/api/Configuration/health/keyvault'
    });
};

export const getApiConfigurationAppConfig = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiConfigurationAppConfigResponse, GetApiConfigurationAppConfigError, ThrowOnError>({
        ...options,
        url: '/api/Configuration/app-config'
    });
};

export const postApiConfigurationRefreshCacheBySecretName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiConfigurationRefreshCacheBySecretNameData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiConfigurationRefreshCacheBySecretNameResponse, PostApiConfigurationRefreshCacheBySecretNameError, ThrowOnError>({
        ...options,
        url: '/api/Configuration/refresh-cache/{secretName}'
    });
};

export const postApiConfigurationClearCache = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiConfigurationClearCacheResponse, PostApiConfigurationClearCacheError, ThrowOnError>({
        ...options,
        url: '/api/Configuration/clear-cache'
    });
};

export const getApiConfigurationDatabaseStatus = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiConfigurationDatabaseStatusResponse, GetApiConfigurationDatabaseStatusError, ThrowOnError>({
        ...options,
        url: '/api/Configuration/database-status'
    });
};

export const getApiConfigurationCacheStats = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiConfigurationCacheStatsResponse, GetApiConfigurationCacheStatsError, ThrowOnError>({
        ...options,
        url: '/api/Configuration/cache-stats'
    });
};

export const getApiEmployees = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiEmployeesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiEmployeesResponse, GetApiEmployeesError, ThrowOnError>({
        ...options,
        url: '/api/Employees'
    });
};

export const postApiEmployees = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiEmployeesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiEmployeesResponse, PostApiEmployeesError, ThrowOnError>({
        ...options,
        url: '/api/Employees'
    });
};

export const getApiEmployeesById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiEmployeesByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiEmployeesByIdResponse, GetApiEmployeesByIdError, ThrowOnError>({
        ...options,
        url: '/api/Employees/{id}'
    });
};

export const putApiEmployeesById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiEmployeesByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiEmployeesByIdResponse, PutApiEmployeesByIdError, ThrowOnError>({
        ...options,
        url: '/api/Employees/{id}'
    });
};

export const deleteApiEmployeesById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiEmployeesByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiEmployeesByIdResponse, DeleteApiEmployeesByIdError, ThrowOnError>({
        ...options,
        url: '/api/Employees/{id}'
    });
};

export const postApiNotifications = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiNotificationsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiNotificationsResponse, PostApiNotificationsError, ThrowOnError>({
        ...options,
        url: '/api/Notifications'
    });
};

export const getApiOrders = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiOrdersData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersResponse, GetApiOrdersError, ThrowOnError>({
        ...options,
        url: '/api/Orders'
    });
};

export const postApiOrders = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiOrdersData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiOrdersResponse, PostApiOrdersError, ThrowOnError>({
        ...options,
        url: '/api/Orders'
    });
};

export const getApiOrdersById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiOrdersByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersByIdResponse, GetApiOrdersByIdError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{id}'
    });
};

export const putApiOrdersById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiOrdersByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiOrdersByIdResponse, PutApiOrdersByIdError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{id}'
    });
};

export const deleteApiOrdersById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiOrdersByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiOrdersByIdResponse, DeleteApiOrdersByIdError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{id}'
    });
};

export const getApiOrdersOrdernumberByOrderNumber = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiOrdersOrdernumberByOrderNumberData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersOrdernumberByOrderNumberResponse, GetApiOrdersOrdernumberByOrderNumberError, ThrowOnError>({
        ...options,
        url: '/api/Orders/ordernumber/{orderNumber}'
    });
};

export const getApiOrdersSearch = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiOrdersSearchData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersSearchResponse, GetApiOrdersSearchError, ThrowOnError>({
        ...options,
        url: '/api/Orders/search'
    });
};

export const getApiOrdersCustomerByCustomerId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiOrdersCustomerByCustomerIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersCustomerByCustomerIdResponse, GetApiOrdersCustomerByCustomerIdError, ThrowOnError>({
        ...options,
        url: '/api/Orders/customer/{customerId}'
    });
};

export const getApiOrdersAttention = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersAttentionResponse, GetApiOrdersAttentionError, ThrowOnError>({
        ...options,
        url: '/api/Orders/attention'
    });
};

export const getApiOrdersStatistics = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiOrdersStatisticsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersStatisticsResponse, GetApiOrdersStatisticsError, ThrowOnError>({
        ...options,
        url: '/api/Orders/statistics'
    });
};

export const postApiOrdersByOrderIdServices = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiOrdersByOrderIdServicesData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiOrdersByOrderIdServicesResponse, PostApiOrdersByOrderIdServicesError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{orderId}/services'
    });
};

export const getApiOrdersByOrderIdServices = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiOrdersByOrderIdServicesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiOrdersByOrderIdServicesResponse, GetApiOrdersByOrderIdServicesError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{orderId}/services'
    });
};

export const putApiOrdersByOrderIdServicesByTag = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiOrdersByOrderIdServicesByTagData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiOrdersByOrderIdServicesByTagResponse, PutApiOrdersByOrderIdServicesByTagError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{orderId}/services/{tag}'
    });
};

export const deleteApiOrdersByOrderIdServicesByTag = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiOrdersByOrderIdServicesByTagData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiOrdersByOrderIdServicesByTagResponse, DeleteApiOrdersByOrderIdServicesByTagError, ThrowOnError>({
        ...options,
        url: '/api/Orders/{orderId}/services/{tag}'
    });
};

export const getApiServiceStatisticsUsage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiServiceStatisticsUsageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiServiceStatisticsUsageResponse, GetApiServiceStatisticsUsageError, ThrowOnError>({
        ...options,
        url: '/api/ServiceStatistics/usage'
    });
};

export const getApiServiceStatisticsUsageByCountry = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiServiceStatisticsUsageByCountryData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiServiceStatisticsUsageByCountryResponse, GetApiServiceStatisticsUsageByCountryError, ThrowOnError>({
        ...options,
        url: '/api/ServiceStatistics/usage-by-country'
    });
};

export const getApiShips = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiShipsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsResponse, GetApiShipsError, ThrowOnError>({
        ...options,
        url: '/api/Ships'
    });
};

export const postApiShips = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiShipsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiShipsResponse, PostApiShipsError, ThrowOnError>({
        ...options,
        url: '/api/Ships'
    });
};

export const getApiShipsById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiShipsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsByIdResponse, GetApiShipsByIdError, ThrowOnError>({
        ...options,
        url: '/api/Ships/{id}'
    });
};

export const putApiShipsById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiShipsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiShipsByIdResponse, PutApiShipsByIdError, ThrowOnError>({
        ...options,
        url: '/api/Ships/{id}'
    });
};

export const deleteApiShipsById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiShipsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiShipsByIdResponse, DeleteApiShipsByIdError, ThrowOnError>({
        ...options,
        url: '/api/Ships/{id}'
    });
};

export const getApiShipsRefactored = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiShipsRefactoredData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsRefactoredResponse, GetApiShipsRefactoredError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored'
    });
};

export const postApiShipsRefactored = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiShipsRefactoredData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiShipsRefactoredResponse, PostApiShipsRefactoredError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored'
    });
};

export const getApiShipsRefactoredById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiShipsRefactoredByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsRefactoredByIdResponse, GetApiShipsRefactoredByIdError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/{id}'
    });
};

export const putApiShipsRefactoredById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiShipsRefactoredByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiShipsRefactoredByIdResponse, PutApiShipsRefactoredByIdError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/{id}'
    });
};

export const deleteApiShipsRefactoredById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiShipsRefactoredByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiShipsRefactoredByIdResponse, DeleteApiShipsRefactoredByIdError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/{id}'
    });
};

export const getApiShipsRefactoredSearch = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiShipsRefactoredSearchData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsRefactoredSearchResponse, GetApiShipsRefactoredSearchError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/search'
    });
};

export const getApiShipsRefactoredLineByShipLineId = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiShipsRefactoredLineByShipLineIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsRefactoredLineByShipLineIdResponse, GetApiShipsRefactoredLineByShipLineIdError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/line/{shipLineId}'
    });
};

export const getApiShipsRefactoredAvailable = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiShipsRefactoredAvailableData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsRefactoredAvailableResponse, GetApiShipsRefactoredAvailableError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/available'
    });
};

export const getApiShipsRefactoredByIdCapacity = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiShipsRefactoredByIdCapacityData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiShipsRefactoredByIdCapacityResponse, GetApiShipsRefactoredByIdCapacityError, ThrowOnError>({
        ...options,
        url: '/api/ships-refactored/{id}/capacity'
    });
};

export const getApiTestRefactoringRepositoryTest = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiTestRefactoringRepositoryTestResponse, GetApiTestRefactoringRepositoryTestError, ThrowOnError>({
        ...options,
        url: '/api/TestRefactoring/repository-test'
    });
};

export const getApiTestRefactoringKeyvaultTest = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiTestRefactoringKeyvaultTestResponse, GetApiTestRefactoringKeyvaultTestError, ThrowOnError>({
        ...options,
        url: '/api/TestRefactoring/keyvault-test'
    });
};

export const postApiTestRefactoringTransactionTest = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiTestRefactoringTransactionTestResponse, PostApiTestRefactoringTransactionTestError, ThrowOnError>({
        ...options,
        url: '/api/TestRefactoring/transaction-test'
    });
};

export const getApiTestRefactoringHealth = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiTestRefactoringHealthResponse, GetApiTestRefactoringHealthError, ThrowOnError>({
        ...options,
        url: '/api/TestRefactoring/health'
    });
};