// This file is auto-generated by @hey-api/openapi-ts

export type ContactDto = {
    contactId?: number;
    contactNumber?: (string) | null;
    contactName?: (string) | null;
    email?: (string) | null;
    phone?: (string) | null;
    celPhone?: (string) | null;
    categories?: Array<(number)> | null;
};

export type Employee = {
    employeeId?: number;
    code?: (string) | null;
    readonly employeeCode?: (string) | null;
    firstName?: (string) | null;
    name?: (string) | null;
    readonly lastName?: (string) | null;
    login?: (string) | null;
    password?: (string) | null;
    address?: (string) | null;
    profile?: (number) | null;
    role?: (string) | null;
    lastLogin?: (Date) | null;
    email?: (string) | null;
    iD_KB?: (string) | null;
    created?: (Date) | null;
    adObjectId?: (string) | null;
    nameidentifierId?: (string) | null;
    isActive?: boolean;
};

export type EmployeeDto = {
    employeeId?: number;
    code?: (string) | null;
    firstName?: (string) | null;
    name?: (string) | null;
    login?: (string) | null;
    password?: (string) | null;
    address?: (string) | null;
    profile?: (number) | null;
    lastLogin?: (Date) | null;
    email?: (string) | null;
    iD_KB?: (string) | null;
    created?: (Date) | null;
    adObjectId?: (string) | null;
    nameidentifierId?: (string) | null;
};

export type Order = {
    orderId?: number;
    orderNumber?: (string) | null;
    orderDate?: (Date) | null;
    closeDate?: (Date) | null;
    sellerId?: (number) | null;
    buyerId?: (number) | null;
    customerId?: (number) | null;
    shippingAgent?: (number) | null;
    shipId?: (number) | null;
    shipLineId?: (number) | null;
    employeeId?: (number) | null;
    paymentCondition?: (string) | null;
    orderStatus?: (number) | null;
    lastEdited?: (Date) | null;
    lastEditor?: (number) | null;
    departurePort?: (number) | null;
    destinationPort?: (number) | null;
    estimatedDepartureDate?: (Date) | null;
    estimatedArrivalDate?: (Date) | null;
    incoTerm?: (string) | null;
    refClient?: (string) | null;
    refSeller?: (string) | null;
    refBuyer?: (string) | null;
    incotermDestination?: (string) | null;
    executedInDate?: (Date) | null;
    fiscalYear?: (number) | null;
    isVal1?: (boolean) | null;
    isVal2?: (boolean) | null;
    isVal3?: (boolean) | null;
    isVal4?: (boolean) | null;
    isVal5?: (boolean) | null;
    refShippingAgent?: (string) | null;
    flag?: (boolean) | null;
    docFlag?: (number) | null;
    city?: (number) | null;
    freightCharges?: (string) | null;
    freightPayableAt?: (string) | null;
    freightMoveType?: (string) | null;
    freightShipmentType?: (string) | null;
    numberOfBlOriginal?: (number) | null;
    numberOfBlCopy?: (number) | null;
    shipperAddress?: (string) | null;
    consigneeAddress?: (string) | null;
    notifyParty?: (number) | null;
    notifyPartyRef?: (string) | null;
    voyageNumber?: (string) | null;
    lcl?: (boolean) | null;
    exportation?: (boolean) | null;
    cityIncotermTo?: (number) | null;
    invoiceUserId?: (number) | null;
    documentationUserId?: (number) | null;
    operationsUserId?: (number) | null;
    oblOverview?: (number) | null;
};

export type OrderDto = {
    orderId?: number;
    orderNumber?: (string) | null;
    orderDate?: (Date) | null;
    closeDate?: (Date) | null;
    sellerId?: (number) | null;
    buyerId?: (number) | null;
    customerId?: (number) | null;
    shippingAgent?: (number) | null;
    shipId?: (number) | null;
    shipLineId?: (number) | null;
    employeeId?: (number) | null;
    paymentCondition?: (string) | null;
    orderStatus?: (number) | null;
    lastEdited?: (Date) | null;
    lastEditor?: (number) | null;
    departurePort?: (number) | null;
    destinationPort?: (number) | null;
    estimatedDepartureDate?: (Date) | null;
    estimatedArrivalDate?: (Date) | null;
    incoTerm?: (string) | null;
    refClient?: (string) | null;
    refSeller?: (string) | null;
    refBuyer?: (string) | null;
    incotermDestination?: (string) | null;
    executedInDate?: (Date) | null;
    fiscalYear?: (number) | null;
    isVal1?: (boolean) | null;
    isVal2?: (boolean) | null;
    isVal3?: (boolean) | null;
    isVal4?: (boolean) | null;
    isVal5?: (boolean) | null;
    refShippingAgent?: (string) | null;
    flag?: (boolean) | null;
    docFlag?: (number) | null;
    city?: (number) | null;
    freightCharges?: (string) | null;
    freightPayableAt?: (string) | null;
    freightMoveType?: (string) | null;
    freightShipmentType?: (string) | null;
    numberOfBlOriginal?: (number) | null;
    numberOfBlCopy?: (number) | null;
    shipperAddress?: (string) | null;
    consigneeAddress?: (string) | null;
    notifyParty?: (number) | null;
    notifyPartyRef?: (string) | null;
    voyageNumber?: (string) | null;
    lcl?: (boolean) | null;
    exportation?: (boolean) | null;
    cityIncotermTo?: (number) | null;
    invoiceUserId?: (number) | null;
    documentationUserId?: (number) | null;
    operationsUserId?: (number) | null;
    oblOverview?: (number) | null;
    departurePortName?: (string) | null;
    destinationPortName?: (string) | null;
    cityName?: (string) | null;
    cityIncotermToName?: (string) | null;
    sellerDetails?: ContactDto;
    buyerDetails?: ContactDto;
    customerDetails?: ContactDto;
    shippingAgentDetails?: ContactDto;
    shipDetails?: ShipDto;
    employeeDetails?: EmployeeDto;
    lastEditorDetails?: EmployeeDto;
    invoiceUserDetails?: EmployeeDto;
    documentationUserDetails?: EmployeeDto;
    operationsUserDetails?: EmployeeDto;
    orderServices?: Array<OrderServiceDto> | null;
};

export type OrderService = {
    orderId?: number;
    tag?: string;
    serviceId?: number;
    contactId?: (number) | null;
    quantity?: number;
    unitPrice?: (number) | null;
    comment?: (string) | null;
    transactionType?: (string) | null;
    invoiceId?: (number) | null;
    currencyId?: (number) | null;
    currencyRate?: (number) | null;
    voucherId?: (number) | null;
    position?: (number) | null;
};

export type OrderServiceDto = {
    orderId?: number;
    tag?: string;
    serviceId?: number;
    contactId?: (number) | null;
    quantity?: number;
    unitPrice?: (number) | null;
    comment?: (string) | null;
    transactionType?: (string) | null;
    invoiceId?: (number) | null;
    currencyId?: (number) | null;
    currencyRate?: (number) | null;
    voucherId?: (number) | null;
    position?: (number) | null;
    serviceName?: (string) | null;
    serviceDescription?: (string) | null;
};

export type OrderStatistics = {
    totalOrders?: number;
    pendingOrders?: number;
    completedOrders?: number;
    cancelledOrders?: number;
    totalValue?: number;
    ordersByStatus?: {
        [key: string]: (number);
    } | null;
    ordersByShippingAgent?: {
        [key: string]: (number);
    } | null;
};

export type ServiceUsageStatisticsDto = {
    serviceId?: number;
    serviceName?: (string) | null;
    orderCount?: number;
    usagePercent?: number;
};

export type Ship = {
    shipId?: number;
    contactId?: (number) | null;
    shipName?: (string) | null;
    carrierCode?: (string) | null;
    shipCode?: (string) | null;
    imoNumber?: (string) | null;
    shipLineId?: number;
    capacity?: number;
    isActive?: boolean;
    createdDate?: Date;
    lastModifiedDate?: (Date) | null;
};

export type ShipCapacityInfo = {
    shipId?: number;
    shipName?: (string) | null;
    totalCapacity?: number;
    usedCapacity?: number;
    readonly availableCapacity?: number;
    readonly capacityUtilization?: number;
};

export type ShipDto = {
    shipId?: number;
    contactId?: (number) | null;
    shipName?: (string) | null;
    carrierCode?: (string) | null;
};

export type GetApiConfigurationHealthKeyvaultResponse = (unknown);

export type GetApiConfigurationHealthKeyvaultError = unknown;

export type GetApiConfigurationAppConfigResponse = (unknown);

export type GetApiConfigurationAppConfigError = unknown;

export type PostApiConfigurationRefreshCacheBySecretNameData = {
    path: {
        secretName: string;
    };
};

export type PostApiConfigurationRefreshCacheBySecretNameResponse = (unknown);

export type PostApiConfigurationRefreshCacheBySecretNameError = unknown;

export type PostApiConfigurationClearCacheResponse = (unknown);

export type PostApiConfigurationClearCacheError = unknown;

export type GetApiConfigurationDatabaseStatusResponse = (unknown);

export type GetApiConfigurationDatabaseStatusError = unknown;

export type GetApiConfigurationCacheStatsResponse = (unknown);

export type GetApiConfigurationCacheStatsError = unknown;

export type GetApiEmployeesData = {
    query?: {
        count?: number;
    };
};

export type GetApiEmployeesResponse = (Array<Employee>);

export type GetApiEmployeesError = unknown;

export type PostApiEmployeesData = {
    body?: Employee;
};

export type PostApiEmployeesResponse = (Employee);

export type PostApiEmployeesError = unknown;

export type GetApiEmployeesByIdData = {
    path: {
        id: number;
    };
};

export type GetApiEmployeesByIdResponse = (Employee);

export type GetApiEmployeesByIdError = unknown;

export type PutApiEmployeesByIdData = {
    body?: Employee;
    path: {
        id: number;
    };
};

export type PutApiEmployeesByIdResponse = (unknown);

export type PutApiEmployeesByIdError = unknown;

export type DeleteApiEmployeesByIdData = {
    path: {
        id: number;
    };
};

export type DeleteApiEmployeesByIdResponse = (unknown);

export type DeleteApiEmployeesByIdError = unknown;

export type PostApiNotificationsData = {
    body?: string;
};

export type PostApiNotificationsResponse = (unknown);

export type PostApiNotificationsError = unknown;

export type GetApiOrdersData = {
    query?: {
        count?: number;
        status?: string;
    };
};

export type GetApiOrdersResponse = (Array<Order>);

export type GetApiOrdersError = unknown;

export type PostApiOrdersData = {
    body?: Order;
};

export type PostApiOrdersResponse = (Order);

export type PostApiOrdersError = unknown;

export type GetApiOrdersByIdData = {
    path: {
        id: number;
    };
};

export type GetApiOrdersByIdResponse = (OrderDto);

export type GetApiOrdersByIdError = unknown;

export type PutApiOrdersByIdData = {
    body?: Order;
    path: {
        id: number;
    };
};

export type PutApiOrdersByIdResponse = (unknown);

export type PutApiOrdersByIdError = unknown;

export type DeleteApiOrdersByIdData = {
    path: {
        id: number;
    };
};

export type DeleteApiOrdersByIdResponse = (unknown);

export type DeleteApiOrdersByIdError = unknown;

export type GetApiOrdersOrdernumberByOrderNumberData = {
    path: {
        orderNumber: string;
    };
};

export type GetApiOrdersOrdernumberByOrderNumberResponse = (OrderDto);

export type GetApiOrdersOrdernumberByOrderNumberError = unknown;

export type GetApiOrdersSearchData = {
    query?: {
        fromDate?: Date;
        page?: number;
        pageSize?: number;
        searchTerm?: string;
        status?: string;
        toDate?: Date;
    };
};

export type GetApiOrdersSearchResponse = (Array<Order>);

export type GetApiOrdersSearchError = unknown;

export type GetApiOrdersCustomerByCustomerIdData = {
    path: {
        customerId: number;
    };
};

export type GetApiOrdersCustomerByCustomerIdResponse = (Array<Order>);

export type GetApiOrdersCustomerByCustomerIdError = unknown;

export type GetApiOrdersAttentionResponse = (Array<Order>);

export type GetApiOrdersAttentionError = unknown;

export type GetApiOrdersStatisticsData = {
    query?: {
        fromDate?: Date;
        toDate?: Date;
    };
};

export type GetApiOrdersStatisticsResponse = (OrderStatistics);

export type GetApiOrdersStatisticsError = unknown;

export type PostApiOrdersByOrderIdServicesData = {
    body?: OrderService;
    path: {
        orderId: number;
    };
};

export type PostApiOrdersByOrderIdServicesResponse = (OrderService);

export type PostApiOrdersByOrderIdServicesError = unknown;

export type GetApiOrdersByOrderIdServicesData = {
    path: {
        orderId: number;
    };
};

export type GetApiOrdersByOrderIdServicesResponse = (Array<OrderService>);

export type GetApiOrdersByOrderIdServicesError = unknown;

export type PutApiOrdersByOrderIdServicesByTagData = {
    body?: OrderService;
    path: {
        orderId: number;
        tag: string;
    };
};

export type PutApiOrdersByOrderIdServicesByTagResponse = (unknown);

export type PutApiOrdersByOrderIdServicesByTagError = unknown;

export type DeleteApiOrdersByOrderIdServicesByTagData = {
    path: {
        orderId: number;
        tag: string;
    };
};

export type DeleteApiOrdersByOrderIdServicesByTagResponse = (unknown);

export type DeleteApiOrdersByOrderIdServicesByTagError = unknown;

export type GetApiServiceStatisticsUsageData = {
    query?: {
        departurePort?: string;
        destinationPort?: string;
        incotermName?: string;
        productName?: string;
    };
};

export type GetApiServiceStatisticsUsageResponse = (Array<ServiceUsageStatisticsDto>);

export type GetApiServiceStatisticsUsageError = unknown;

export type GetApiServiceStatisticsUsageByCountryData = {
    query?: {
        departureCountry?: string;
        destinationCountry?: string;
        incotermName?: string;
        productName?: string;
    };
};

export type GetApiServiceStatisticsUsageByCountryResponse = (Array<ServiceUsageStatisticsDto>);

export type GetApiServiceStatisticsUsageByCountryError = unknown;

export type GetApiShipsData = {
    query?: {
        count?: number;
    };
};

export type GetApiShipsResponse = (Array<Ship>);

export type GetApiShipsError = unknown;

export type PostApiShipsData = {
    body?: Ship;
};

export type PostApiShipsResponse = (Ship);

export type PostApiShipsError = unknown;

export type GetApiShipsByIdData = {
    path: {
        id: number;
    };
};

export type GetApiShipsByIdResponse = (Ship);

export type GetApiShipsByIdError = unknown;

export type PutApiShipsByIdData = {
    body?: Ship;
    path: {
        id: number;
    };
};

export type PutApiShipsByIdResponse = (unknown);

export type PutApiShipsByIdError = unknown;

export type DeleteApiShipsByIdData = {
    path: {
        id: number;
    };
};

export type DeleteApiShipsByIdResponse = (unknown);

export type DeleteApiShipsByIdError = unknown;

export type GetApiShipsRefactoredData = {
    query?: {
        page?: number;
        pageSize?: number;
    };
};

export type GetApiShipsRefactoredResponse = (Array<Ship>);

export type GetApiShipsRefactoredError = unknown;

export type PostApiShipsRefactoredData = {
    body?: Ship;
};

export type PostApiShipsRefactoredResponse = (Ship);

export type PostApiShipsRefactoredError = unknown;

export type GetApiShipsRefactoredByIdData = {
    path: {
        id: number;
    };
};

export type GetApiShipsRefactoredByIdResponse = (Ship);

export type GetApiShipsRefactoredByIdError = unknown;

export type PutApiShipsRefactoredByIdData = {
    body?: Ship;
    path: {
        id: number;
    };
};

export type PutApiShipsRefactoredByIdResponse = (Ship);

export type PutApiShipsRefactoredByIdError = unknown;

export type DeleteApiShipsRefactoredByIdData = {
    path: {
        id: number;
    };
};

export type DeleteApiShipsRefactoredByIdResponse = (unknown);

export type DeleteApiShipsRefactoredByIdError = unknown;

export type GetApiShipsRefactoredSearchData = {
    query?: {
        searchTerm?: string;
    };
};

export type GetApiShipsRefactoredSearchResponse = (Array<Ship>);

export type GetApiShipsRefactoredSearchError = unknown;

export type GetApiShipsRefactoredLineByShipLineIdData = {
    path: {
        shipLineId: number;
    };
};

export type GetApiShipsRefactoredLineByShipLineIdResponse = (Array<Ship>);

export type GetApiShipsRefactoredLineByShipLineIdError = unknown;

export type GetApiShipsRefactoredAvailableData = {
    query?: {
        departurePort?: string;
        destinationPort?: string;
    };
};

export type GetApiShipsRefactoredAvailableResponse = (Array<Ship>);

export type GetApiShipsRefactoredAvailableError = unknown;

export type GetApiShipsRefactoredByIdCapacityData = {
    path: {
        id: number;
    };
};

export type GetApiShipsRefactoredByIdCapacityResponse = (ShipCapacityInfo);

export type GetApiShipsRefactoredByIdCapacityError = unknown;

export type GetApiTestRefactoringRepositoryTestResponse = (unknown);

export type GetApiTestRefactoringRepositoryTestError = unknown;

export type GetApiTestRefactoringKeyvaultTestResponse = (unknown);

export type GetApiTestRefactoringKeyvaultTestError = unknown;

export type PostApiTestRefactoringTransactionTestResponse = (unknown);

export type PostApiTestRefactoringTransactionTestError = unknown;

export type GetApiTestRefactoringHealthResponse = (unknown);

export type GetApiTestRefactoringHealthError = unknown;

export type GetApiEmployeesResponseTransformer = (data: any) => Promise<GetApiEmployeesResponse>;

export type EmployeeModelResponseTransformer = (data: any) => Employee;

export const EmployeeModelResponseTransformer: EmployeeModelResponseTransformer = data => {
    if (data?.lastLogin) {
        data.lastLogin = new Date(data.lastLogin);
    }
    if (data?.created) {
        data.created = new Date(data.created);
    }
    return data;
};

export const GetApiEmployeesResponseTransformer: GetApiEmployeesResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(EmployeeModelResponseTransformer);
    }
    return data;
};

export type PostApiEmployeesResponseTransformer = (data: any) => Promise<PostApiEmployeesResponse>;

export const PostApiEmployeesResponseTransformer: PostApiEmployeesResponseTransformer = async (data) => {
    EmployeeModelResponseTransformer(data);
    return data;
};

export type GetApiEmployeesByIdResponseTransformer = (data: any) => Promise<GetApiEmployeesByIdResponse>;

export const GetApiEmployeesByIdResponseTransformer: GetApiEmployeesByIdResponseTransformer = async (data) => {
    EmployeeModelResponseTransformer(data);
    return data;
};

export type GetApiOrdersResponseTransformer = (data: any) => Promise<GetApiOrdersResponse>;

export type OrderModelResponseTransformer = (data: any) => Order;

export const OrderModelResponseTransformer: OrderModelResponseTransformer = data => {
    if (data?.orderDate) {
        data.orderDate = new Date(data.orderDate);
    }
    if (data?.closeDate) {
        data.closeDate = new Date(data.closeDate);
    }
    if (data?.lastEdited) {
        data.lastEdited = new Date(data.lastEdited);
    }
    if (data?.estimatedDepartureDate) {
        data.estimatedDepartureDate = new Date(data.estimatedDepartureDate);
    }
    if (data?.estimatedArrivalDate) {
        data.estimatedArrivalDate = new Date(data.estimatedArrivalDate);
    }
    if (data?.executedInDate) {
        data.executedInDate = new Date(data.executedInDate);
    }
    return data;
};

export const GetApiOrdersResponseTransformer: GetApiOrdersResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(OrderModelResponseTransformer);
    }
    return data;
};

export type PostApiOrdersResponseTransformer = (data: any) => Promise<PostApiOrdersResponse>;

export const PostApiOrdersResponseTransformer: PostApiOrdersResponseTransformer = async (data) => {
    OrderModelResponseTransformer(data);
    return data;
};

export type GetApiOrdersByIdResponseTransformer = (data: any) => Promise<GetApiOrdersByIdResponse>;

export type OrderDtoModelResponseTransformer = (data: any) => OrderDto;

export type EmployeeDtoModelResponseTransformer = (data: any) => EmployeeDto;

export const EmployeeDtoModelResponseTransformer: EmployeeDtoModelResponseTransformer = data => {
    if (data?.lastLogin) {
        data.lastLogin = new Date(data.lastLogin);
    }
    if (data?.created) {
        data.created = new Date(data.created);
    }
    return data;
};

export const OrderDtoModelResponseTransformer: OrderDtoModelResponseTransformer = data => {
    if (data?.orderDate) {
        data.orderDate = new Date(data.orderDate);
    }
    if (data?.closeDate) {
        data.closeDate = new Date(data.closeDate);
    }
    if (data?.lastEdited) {
        data.lastEdited = new Date(data.lastEdited);
    }
    if (data?.estimatedDepartureDate) {
        data.estimatedDepartureDate = new Date(data.estimatedDepartureDate);
    }
    if (data?.estimatedArrivalDate) {
        data.estimatedArrivalDate = new Date(data.estimatedArrivalDate);
    }
    if (data?.executedInDate) {
        data.executedInDate = new Date(data.executedInDate);
    }
    if (data?.employeeDetails) {
        EmployeeDtoModelResponseTransformer(data.employeeDetails);
    }
    if (data?.lastEditorDetails) {
        EmployeeDtoModelResponseTransformer(data.lastEditorDetails);
    }
    if (data?.invoiceUserDetails) {
        EmployeeDtoModelResponseTransformer(data.invoiceUserDetails);
    }
    if (data?.documentationUserDetails) {
        EmployeeDtoModelResponseTransformer(data.documentationUserDetails);
    }
    if (data?.operationsUserDetails) {
        EmployeeDtoModelResponseTransformer(data.operationsUserDetails);
    }
    return data;
};

export const GetApiOrdersByIdResponseTransformer: GetApiOrdersByIdResponseTransformer = async (data) => {
    OrderDtoModelResponseTransformer(data);
    return data;
};

export type GetApiOrdersOrdernumberByOrderNumberResponseTransformer = (data: any) => Promise<GetApiOrdersOrdernumberByOrderNumberResponse>;

export const GetApiOrdersOrdernumberByOrderNumberResponseTransformer: GetApiOrdersOrdernumberByOrderNumberResponseTransformer = async (data) => {
    OrderDtoModelResponseTransformer(data);
    return data;
};

export type GetApiOrdersSearchResponseTransformer = (data: any) => Promise<GetApiOrdersSearchResponse>;

export const GetApiOrdersSearchResponseTransformer: GetApiOrdersSearchResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(OrderModelResponseTransformer);
    }
    return data;
};

export type GetApiOrdersCustomerByCustomerIdResponseTransformer = (data: any) => Promise<GetApiOrdersCustomerByCustomerIdResponse>;

export const GetApiOrdersCustomerByCustomerIdResponseTransformer: GetApiOrdersCustomerByCustomerIdResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(OrderModelResponseTransformer);
    }
    return data;
};

export type GetApiOrdersAttentionResponseTransformer = (data: any) => Promise<GetApiOrdersAttentionResponse>;

export const GetApiOrdersAttentionResponseTransformer: GetApiOrdersAttentionResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(OrderModelResponseTransformer);
    }
    return data;
};

export type GetApiShipsResponseTransformer = (data: any) => Promise<GetApiShipsResponse>;

export type ShipModelResponseTransformer = (data: any) => Ship;

export const ShipModelResponseTransformer: ShipModelResponseTransformer = data => {
    if (data?.createdDate) {
        data.createdDate = new Date(data.createdDate);
    }
    if (data?.lastModifiedDate) {
        data.lastModifiedDate = new Date(data.lastModifiedDate);
    }
    return data;
};

export const GetApiShipsResponseTransformer: GetApiShipsResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(ShipModelResponseTransformer);
    }
    return data;
};

export type PostApiShipsResponseTransformer = (data: any) => Promise<PostApiShipsResponse>;

export const PostApiShipsResponseTransformer: PostApiShipsResponseTransformer = async (data) => {
    ShipModelResponseTransformer(data);
    return data;
};

export type GetApiShipsByIdResponseTransformer = (data: any) => Promise<GetApiShipsByIdResponse>;

export const GetApiShipsByIdResponseTransformer: GetApiShipsByIdResponseTransformer = async (data) => {
    ShipModelResponseTransformer(data);
    return data;
};

export type GetApiShipsRefactoredResponseTransformer = (data: any) => Promise<GetApiShipsRefactoredResponse>;

export const GetApiShipsRefactoredResponseTransformer: GetApiShipsRefactoredResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(ShipModelResponseTransformer);
    }
    return data;
};

export type PostApiShipsRefactoredResponseTransformer = (data: any) => Promise<PostApiShipsRefactoredResponse>;

export const PostApiShipsRefactoredResponseTransformer: PostApiShipsRefactoredResponseTransformer = async (data) => {
    ShipModelResponseTransformer(data);
    return data;
};

export type GetApiShipsRefactoredByIdResponseTransformer = (data: any) => Promise<GetApiShipsRefactoredByIdResponse>;

export const GetApiShipsRefactoredByIdResponseTransformer: GetApiShipsRefactoredByIdResponseTransformer = async (data) => {
    ShipModelResponseTransformer(data);
    return data;
};

export type PutApiShipsRefactoredByIdResponseTransformer = (data: any) => Promise<PutApiShipsRefactoredByIdResponse>;

export const PutApiShipsRefactoredByIdResponseTransformer: PutApiShipsRefactoredByIdResponseTransformer = async (data) => {
    ShipModelResponseTransformer(data);
    return data;
};

export type GetApiShipsRefactoredSearchResponseTransformer = (data: any) => Promise<GetApiShipsRefactoredSearchResponse>;

export const GetApiShipsRefactoredSearchResponseTransformer: GetApiShipsRefactoredSearchResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(ShipModelResponseTransformer);
    }
    return data;
};

export type GetApiShipsRefactoredLineByShipLineIdResponseTransformer = (data: any) => Promise<GetApiShipsRefactoredLineByShipLineIdResponse>;

export const GetApiShipsRefactoredLineByShipLineIdResponseTransformer: GetApiShipsRefactoredLineByShipLineIdResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(ShipModelResponseTransformer);
    }
    return data;
};

export type GetApiShipsRefactoredAvailableResponseTransformer = (data: any) => Promise<GetApiShipsRefactoredAvailableResponse>;

export const GetApiShipsRefactoredAvailableResponseTransformer: GetApiShipsRefactoredAvailableResponseTransformer = async (data) => {
    if (Array.isArray(data)) {
        data.forEach(ShipModelResponseTransformer);
    }
    return data;
};