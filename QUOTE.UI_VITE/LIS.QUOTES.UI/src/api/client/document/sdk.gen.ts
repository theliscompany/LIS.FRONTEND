// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, formDataBodySerializer } from '@hey-api/client-axios';
import type { PostApiFileUploadData, PostApiFileUploadError, PostApiFileUploadResponse, GetApiFileByFolderByFileNameData, GetApiFileByFolderByFileNameError, GetApiFileByFolderByFileNameResponse, DeleteApiFileByFolderByFileNameData, DeleteApiFileByFolderByFileNameError, DeleteApiFileByFolderByFileNameResponse, GetApiFileByFolderData, GetApiFileByFolderError, GetApiFileByFolderResponse } from './types.gen';

export const client = createClient(createConfig());

export const postApiFileUpload = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiFileUploadData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiFileUploadResponse, PostApiFileUploadError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/File/upload'
    });
};

export const getApiFileByFolderByFileName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiFileByFolderByFileNameData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiFileByFolderByFileNameResponse, GetApiFileByFolderByFileNameError, ThrowOnError>({
        ...options,
        url: '/api/File/{folder}/{fileName}'
    });
};

export const deleteApiFileByFolderByFileName = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiFileByFolderByFileNameData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiFileByFolderByFileNameResponse, DeleteApiFileByFolderByFileNameError, ThrowOnError>({
        ...options,
        url: '/api/File/{folder}/{fileName}'
    });
};

export const getApiFileByFolder = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiFileByFolderData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiFileByFolderResponse, GetApiFileByFolderError, ThrowOnError>({
        ...options,
        url: '/api/File/{folder}'
    });
};